{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"D:\\mergerware\\loan-management-app\\packages\\blaze\\builtins.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/blaze/builtins.js","filename":"D:\\mergerware\\loan-management-app\\packages\\blaze\\builtins.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"D:\\mergerware\\loan-management-app","root":"D:\\mergerware\\loan-management-app","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"MemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"D:\\mergerware\\loan-management-app\\packages\\blaze\\builtins.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/blaze/builtins.js"}},"code":"var _slicedToArray;\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 0);\nvar _typeof;\nmodule.link(\"@babel/runtime/helpers/typeof\", {\n  default: function (v) {\n    _typeof = v;\n  }\n}, 1);\nvar has;\nmodule.link(\"lodash.has\", {\n  \"default\": function (v) {\n    has = v;\n  }\n}, 0);\nvar isObject;\nmodule.link(\"lodash.isobject\", {\n  \"default\": function (v) {\n    isObject = v;\n  }\n}, 1);\nBlaze._calculateCondition = function (cond) {\n  if (HTML.isArray(cond) && cond.length === 0) cond = false;\n  return !!cond;\n};\n\n/**\n * @summary Constructs a View that renders content with a data context.\n * @locus Client\n * @param {Object|Function} data An object to use as the data context, or a function returning such an object.  If a\n *   function is provided, it will be reactively re-run.\n * @param {Function} contentFunc A Function that returns [*renderable content*](#Renderable-Content).\n */\nBlaze.With = function (data, contentFunc) {\n  var view = Blaze.View('with', contentFunc);\n  view.dataVar = new ReactiveVar();\n  view.onViewCreated(function () {\n    if (typeof data === 'function') {\n      // `data` is a reactive function\n      view.autorun(function () {\n        view.dataVar.set(data());\n      }, view.parentView, 'setData');\n    } else {\n      view.dataVar.set(data);\n    }\n  });\n  return view;\n};\n\n/**\n * @summary Shallow compare of two bindings.\n * @param {Binding} x\n * @param {Binding} y\n */\nfunction _isEqualBinding(x, y) {\n  if (_typeof(x) === 'object' && _typeof(y) === 'object') {\n    return x.error === y.error && ReactiveVar._isEqual(x.value, y.value);\n  } else {\n    return ReactiveVar._isEqual(x, y);\n  }\n}\n\n/**\n * Attaches bindings to the instantiated view.\n * @param {Object} bindings A dictionary of bindings, each binding name\n * corresponds to a value or a function that will be reactively re-run.\n * @param {Blaze.View} view The target.\n */\nBlaze._attachBindingsToView = function (bindings, view) {\n  function setBindingValue(name, value) {\n    if (value && typeof value.then === 'function') {\n      value.then(function (value) {\n        return view._scopeBindings[name].set({\n          value: value\n        });\n      }, function (error) {\n        return view._scopeBindings[name].set({\n          error: error\n        });\n      });\n    } else {\n      view._scopeBindings[name].set({\n        value: value\n      });\n    }\n  }\n  view.onViewCreated(function () {\n    Object.entries(bindings).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        name = _ref2[0],\n        binding = _ref2[1];\n      view._scopeBindings[name] = new ReactiveVar(undefined, _isEqualBinding);\n      if (typeof binding === 'function') {\n        view.autorun(function () {\n          return setBindingValue(name, binding());\n        }, view.parentView);\n      } else {\n        setBindingValue(name, binding);\n      }\n    });\n  });\n};\n\n/**\n * @summary Constructs a View setting the local lexical scope in the block.\n * @param {Function} bindings Dictionary mapping names of bindings to\n * values or computations to reactively re-run.\n * @param {Function} contentFunc A Function that returns [*renderable content*](#Renderable-Content).\n */\nBlaze.Let = function (bindings, contentFunc) {\n  var view = Blaze.View('let', contentFunc);\n  Blaze._attachBindingsToView(bindings, view);\n  return view;\n};\n\n/**\n * @summary Constructs a View that renders content conditionally.\n * @locus Client\n * @param {Function} conditionFunc A function to reactively re-run.  Whether the result is truthy or falsy determines\n *   whether `contentFunc` or `elseFunc` is shown.  An empty array is considered falsy.\n * @param {Function} contentFunc A Function that returns [*renderable content*](#Renderable-Content).\n * @param {Function} [elseFunc] Optional.  A Function that returns [*renderable content*](#Renderable-Content).  If no\n *   `elseFunc` is supplied, no content is shown in the \"else\" case.\n */\nBlaze.If = function (conditionFunc, contentFunc, elseFunc, _not) {\n  var conditionVar = new ReactiveVar();\n  var view = Blaze.View(_not ? 'unless' : 'if', function () {\n    return conditionVar.get() ? contentFunc() : elseFunc ? elseFunc() : null;\n  });\n  view.__conditionVar = conditionVar;\n  view.onViewCreated(function () {\n    this.autorun(function () {\n      var cond = Blaze._calculateCondition(conditionFunc());\n      conditionVar.set(_not ? !cond : cond);\n    }, this.parentView, 'condition');\n  });\n  return view;\n};\n\n/**\n * @summary An inverted [`Blaze.If`](#Blaze-If).\n * @locus Client\n * @param {Function} conditionFunc A function to reactively re-run.  If the result is falsy, `contentFunc` is shown,\n *   otherwise `elseFunc` is shown.  An empty array is considered falsy.\n * @param {Function} contentFunc A Function that returns [*renderable content*](#Renderable-Content).\n * @param {Function} [elseFunc] Optional.  A Function that returns [*renderable content*](#Renderable-Content).  If no\n *   `elseFunc` is supplied, no content is shown in the \"else\" case.\n */\nBlaze.Unless = function (conditionFunc, contentFunc, elseFunc) {\n  return Blaze.If(conditionFunc, contentFunc, elseFunc, true /*_not*/);\n};\n\n/**\n * @summary Constructs a View that renders `contentFunc` for each item in a sequence.\n * @locus Client\n * @param {Function} argFunc A function to reactively re-run. The function can\n * return one of two options:\n *\n * 1. An object with two fields: '_variable' and '_sequence'. Each iterates over\n *   '_sequence', it may be a Cursor, an array, null, or undefined. Inside the\n *   Each body you will be able to get the current item from the sequence using\n *   the name specified in the '_variable' field.\n *\n * 2. Just a sequence (Cursor, array, null, or undefined) not wrapped into an\n *   object. Inside the Each body, the current item will be set as the data\n *   context.\n * @param {Function} contentFunc A Function that returns  [*renderable\n * content*](#Renderable-Content).\n * @param {Function} [elseFunc] A Function that returns [*renderable\n * content*](#Renderable-Content) to display in the case when there are no items\n * in the sequence.\n */\nBlaze.Each = function (argFunc, contentFunc, elseFunc) {\n  var eachView = Blaze.View('each', function () {\n    var subviews = this.initialSubviews;\n    this.initialSubviews = null;\n    if (this._isCreatedForExpansion) {\n      this.expandedValueDep = new Tracker.Dependency();\n      this.expandedValueDep.depend();\n    }\n    return subviews;\n  });\n  eachView.initialSubviews = [];\n  eachView.numItems = 0;\n  eachView.inElseMode = false;\n  eachView.stopHandle = null;\n  eachView.contentFunc = contentFunc;\n  eachView.elseFunc = elseFunc;\n  eachView.argVar = new ReactiveVar();\n  eachView.variableName = null;\n\n  // update the @index value in the scope of all subviews in the range\n  var updateIndices = function (from, to) {\n    if (to === undefined) {\n      to = eachView.numItems - 1;\n    }\n    for (var i = from; i <= to; i++) {\n      var view = eachView._domrange.members[i].view;\n      view._scopeBindings['@index'].set({\n        value: i\n      });\n    }\n  };\n  eachView.onViewCreated(function () {\n    // We evaluate argFunc in an autorun to make sure\n    // Blaze.currentView is always set when it runs (rather than\n    // passing argFunc straight to ObserveSequence).\n    eachView.autorun(function () {\n      // argFunc can return either a sequence as is or a wrapper object with a\n      // _sequence and _variable fields set.\n      var arg = argFunc();\n      if (isObject(arg) && has(arg, '_sequence')) {\n        eachView.variableName = arg._variable || null;\n        arg = arg._sequence;\n      }\n      eachView.argVar.set(arg);\n    }, eachView.parentView, 'collection');\n    eachView.stopHandle = ObserveSequence.observe(function () {\n      return eachView.argVar.get();\n    }, {\n      addedAt: function (id, item, index) {\n        Tracker.nonreactive(function () {\n          var newItemView;\n          if (eachView.variableName) {\n            // new-style #each (as in {{#each item in items}})\n            // doesn't create a new data context\n            newItemView = Blaze.View('item', eachView.contentFunc);\n          } else {\n            newItemView = Blaze.With(item, eachView.contentFunc);\n          }\n          eachView.numItems++;\n          var bindings = {};\n          bindings['@index'] = index;\n          if (eachView.variableName) {\n            bindings[eachView.variableName] = item;\n          }\n          Blaze._attachBindingsToView(bindings, newItemView);\n          if (eachView.expandedValueDep) {\n            eachView.expandedValueDep.changed();\n          } else if (eachView._domrange) {\n            if (eachView.inElseMode) {\n              eachView._domrange.removeMember(0);\n              eachView.inElseMode = false;\n            }\n            var range = Blaze._materializeView(newItemView, eachView);\n            eachView._domrange.addMember(range, index);\n            updateIndices(index);\n          } else {\n            eachView.initialSubviews.splice(index, 0, newItemView);\n          }\n        });\n      },\n      removedAt: function (id, item, index) {\n        Tracker.nonreactive(function () {\n          eachView.numItems--;\n          if (eachView.expandedValueDep) {\n            eachView.expandedValueDep.changed();\n          } else if (eachView._domrange) {\n            eachView._domrange.removeMember(index);\n            updateIndices(index);\n            if (eachView.elseFunc && eachView.numItems === 0) {\n              eachView.inElseMode = true;\n              eachView._domrange.addMember(Blaze._materializeView(Blaze.View('each_else', eachView.elseFunc), eachView), 0);\n            }\n          } else {\n            eachView.initialSubviews.splice(index, 1);\n          }\n        });\n      },\n      changedAt: function (id, newItem, oldItem, index) {\n        Tracker.nonreactive(function () {\n          if (eachView.expandedValueDep) {\n            eachView.expandedValueDep.changed();\n          } else {\n            var itemView;\n            if (eachView._domrange) {\n              itemView = eachView._domrange.getMember(index).view;\n            } else {\n              itemView = eachView.initialSubviews[index];\n            }\n            if (eachView.variableName) {\n              itemView._scopeBindings[eachView.variableName].set({\n                value: newItem\n              });\n            } else {\n              itemView.dataVar.set(newItem);\n            }\n          }\n        });\n      },\n      movedTo: function (id, item, fromIndex, toIndex) {\n        Tracker.nonreactive(function () {\n          if (eachView.expandedValueDep) {\n            eachView.expandedValueDep.changed();\n          } else if (eachView._domrange) {\n            eachView._domrange.moveMember(fromIndex, toIndex);\n            updateIndices(Math.min(fromIndex, toIndex), Math.max(fromIndex, toIndex));\n          } else {\n            var subviews = eachView.initialSubviews;\n            var itemView = subviews[fromIndex];\n            subviews.splice(fromIndex, 1);\n            subviews.splice(toIndex, 0, itemView);\n          }\n        });\n      }\n    });\n    if (eachView.elseFunc && eachView.numItems === 0) {\n      eachView.inElseMode = true;\n      eachView.initialSubviews[0] = Blaze.View('each_else', eachView.elseFunc);\n    }\n  });\n  eachView.onViewDestroyed(function () {\n    if (eachView.stopHandle) eachView.stopHandle.stop();\n  });\n  return eachView;\n};\nBlaze._TemplateWith = function (arg, contentFunc) {\n  var w;\n  var argFunc = arg;\n  if (typeof arg !== 'function') {\n    argFunc = function () {\n      return arg;\n    };\n  }\n\n  // This is a little messy.  When we compile `{{> Template.contentBlock}}`, we\n  // wrap it in Blaze._InOuterTemplateScope in order to skip the intermediate\n  // parent Views in the current template.  However, when there's an argument\n  // (`{{> Template.contentBlock arg}}`), the argument needs to be evaluated\n  // in the original scope.  There's no good order to nest\n  // Blaze._InOuterTemplateScope and Blaze._TemplateWith to achieve this,\n  // so we wrap argFunc to run it in the \"original parentView\" of the\n  // Blaze._InOuterTemplateScope.\n  //\n  // To make this better, reconsider _InOuterTemplateScope as a primitive.\n  // Longer term, evaluate expressions in the proper lexical scope.\n  var wrappedArgFunc = function () {\n    var viewToEvaluateArg = null;\n    if (w.parentView && w.parentView.name === 'InOuterTemplateScope') {\n      viewToEvaluateArg = w.parentView.originalParentView;\n    }\n    if (viewToEvaluateArg) {\n      return Blaze._withCurrentView(viewToEvaluateArg, argFunc);\n    } else {\n      return argFunc();\n    }\n  };\n  var wrappedContentFunc = function () {\n    var content = contentFunc.call(this);\n\n    // Since we are generating the Blaze._TemplateWith view for the\n    // user, set the flag on the child view.  If `content` is a template,\n    // construct the View so that we can set the flag.\n    if (content instanceof Blaze.Template) {\n      content = content.constructView();\n    }\n    if (content instanceof Blaze.View) {\n      content._hasGeneratedParent = true;\n    }\n    return content;\n  };\n  w = Blaze.With(wrappedArgFunc, wrappedContentFunc);\n  w.__isTemplateWith = true;\n  return w;\n};\nBlaze._InOuterTemplateScope = function (templateView, contentFunc) {\n  var view = Blaze.View('InOuterTemplateScope', contentFunc);\n  var parentView = templateView.parentView;\n\n  // Hack so that if you call `{{> foo bar}}` and it expands into\n  // `{{#with bar}}{{> foo}}{{/with}}`, and then `foo` is a template\n  // that inserts `{{> Template.contentBlock}}`, the data context for\n  // `Template.contentBlock` is not `bar` but the one enclosing that.\n  if (parentView.__isTemplateWith) parentView = parentView.parentView;\n  view.onViewCreated(function () {\n    this.originalParentView = this.parentView;\n    this.parentView = parentView;\n    this.__childDoesntStartNewLexicalScope = true;\n  });\n  return view;\n};","map":{"version":3,"names":["_slicedToArray","module","link","default","v","_typeof","has","isObject","Blaze","_calculateCondition","cond","HTML","isArray","length","With","data","contentFunc","view","View","dataVar","ReactiveVar","onViewCreated","autorun","set","parentView","_isEqualBinding","x","y","error","_isEqual","value","_attachBindingsToView","bindings","setBindingValue","name","then","_scopeBindings","Object","entries","forEach","_ref","_ref2","binding","undefined","Let","If","conditionFunc","elseFunc","_not","conditionVar","get","__conditionVar","Unless","Each","argFunc","eachView","subviews","initialSubviews","_isCreatedForExpansion","expandedValueDep","Tracker","Dependency","depend","numItems","inElseMode","stopHandle","argVar","variableName","updateIndices","from","to","i","_domrange","members","arg","_variable","_sequence","ObserveSequence","observe","addedAt","id","item","index","nonreactive","newItemView","changed","removeMember","range","_materializeView","addMember","splice","removedAt","changedAt","newItem","oldItem","itemView","getMember","movedTo","fromIndex","toIndex","moveMember","Math","min","max","onViewDestroyed","stop","_TemplateWith","w","wrappedArgFunc","viewToEvaluateArg","originalParentView","_withCurrentView","wrappedContentFunc","content","call","Template","constructView","_hasGeneratedParent","__isTemplateWith","_InOuterTemplateScope","templateView","__childDoesntStartNewLexicalScope"],"sources":["packages/blaze/builtins.js"],"sourcesContent":["import has from 'lodash.has';\nimport isObject from 'lodash.isobject';\n\nBlaze._calculateCondition = function (cond) {\n  if (HTML.isArray(cond) && cond.length === 0)\n    cond = false;\n  return !! cond;\n};\n\n/**\n * @summary Constructs a View that renders content with a data context.\n * @locus Client\n * @param {Object|Function} data An object to use as the data context, or a function returning such an object.  If a\n *   function is provided, it will be reactively re-run.\n * @param {Function} contentFunc A Function that returns [*renderable content*](#Renderable-Content).\n */\nBlaze.With = function (data, contentFunc) {\n  var view = Blaze.View('with', contentFunc);\n\n  view.dataVar = new ReactiveVar;\n\n  view.onViewCreated(function () {\n    if (typeof data === 'function') {\n      // `data` is a reactive function\n      view.autorun(function () {\n        view.dataVar.set(data());\n      }, view.parentView, 'setData');\n    } else {\n      view.dataVar.set(data);\n    }\n  });\n\n  return view;\n};\n\n\n/**\n * @summary Shallow compare of two bindings.\n * @param {Binding} x\n * @param {Binding} y\n */\nfunction _isEqualBinding(x, y) {\n  if (typeof x === 'object' && typeof y === 'object') {\n    return x.error === y.error && ReactiveVar._isEqual(x.value, y.value);\n  }\n  else {\n    return ReactiveVar._isEqual(x, y);\n  }\n}\n\n/**\n * Attaches bindings to the instantiated view.\n * @param {Object} bindings A dictionary of bindings, each binding name\n * corresponds to a value or a function that will be reactively re-run.\n * @param {Blaze.View} view The target.\n */\nBlaze._attachBindingsToView = function (bindings, view) {\n  function setBindingValue(name, value) {\n    if (value && typeof value.then === 'function') {\n      value.then(\n        value => view._scopeBindings[name].set({ value }),\n        error => view._scopeBindings[name].set({ error }),\n      );\n    } else {\n      view._scopeBindings[name].set({ value });\n    }\n  }\n\n  view.onViewCreated(function () {\n    Object.entries(bindings).forEach(function ([name, binding]) {\n      view._scopeBindings[name] = new ReactiveVar(undefined, _isEqualBinding);\n      if (typeof binding === 'function') {\n        view.autorun(() => setBindingValue(name, binding()), view.parentView);\n      } else {\n        setBindingValue(name, binding);\n      }\n    });\n  });\n};\n\n/**\n * @summary Constructs a View setting the local lexical scope in the block.\n * @param {Function} bindings Dictionary mapping names of bindings to\n * values or computations to reactively re-run.\n * @param {Function} contentFunc A Function that returns [*renderable content*](#Renderable-Content).\n */\nBlaze.Let = function (bindings, contentFunc) {\n  var view = Blaze.View('let', contentFunc);\n  Blaze._attachBindingsToView(bindings, view);\n\n  return view;\n};\n\n/**\n * @summary Constructs a View that renders content conditionally.\n * @locus Client\n * @param {Function} conditionFunc A function to reactively re-run.  Whether the result is truthy or falsy determines\n *   whether `contentFunc` or `elseFunc` is shown.  An empty array is considered falsy.\n * @param {Function} contentFunc A Function that returns [*renderable content*](#Renderable-Content).\n * @param {Function} [elseFunc] Optional.  A Function that returns [*renderable content*](#Renderable-Content).  If no\n *   `elseFunc` is supplied, no content is shown in the \"else\" case.\n */\nBlaze.If = function (conditionFunc, contentFunc, elseFunc, _not) {\n  var conditionVar = new ReactiveVar;\n\n  var view = Blaze.View(_not ? 'unless' : 'if', function () {\n    return conditionVar.get() ? contentFunc() :\n      (elseFunc ? elseFunc() : null);\n  });\n  view.__conditionVar = conditionVar;\n  view.onViewCreated(function () {\n    this.autorun(function () {\n      var cond = Blaze._calculateCondition(conditionFunc());\n      conditionVar.set(_not ? (! cond) : cond);\n    }, this.parentView, 'condition');\n  });\n\n  return view;\n};\n\n/**\n * @summary An inverted [`Blaze.If`](#Blaze-If).\n * @locus Client\n * @param {Function} conditionFunc A function to reactively re-run.  If the result is falsy, `contentFunc` is shown,\n *   otherwise `elseFunc` is shown.  An empty array is considered falsy.\n * @param {Function} contentFunc A Function that returns [*renderable content*](#Renderable-Content).\n * @param {Function} [elseFunc] Optional.  A Function that returns [*renderable content*](#Renderable-Content).  If no\n *   `elseFunc` is supplied, no content is shown in the \"else\" case.\n */\nBlaze.Unless = function (conditionFunc, contentFunc, elseFunc) {\n  return Blaze.If(conditionFunc, contentFunc, elseFunc, true /*_not*/);\n};\n\n/**\n * @summary Constructs a View that renders `contentFunc` for each item in a sequence.\n * @locus Client\n * @param {Function} argFunc A function to reactively re-run. The function can\n * return one of two options:\n *\n * 1. An object with two fields: '_variable' and '_sequence'. Each iterates over\n *   '_sequence', it may be a Cursor, an array, null, or undefined. Inside the\n *   Each body you will be able to get the current item from the sequence using\n *   the name specified in the '_variable' field.\n *\n * 2. Just a sequence (Cursor, array, null, or undefined) not wrapped into an\n *   object. Inside the Each body, the current item will be set as the data\n *   context.\n * @param {Function} contentFunc A Function that returns  [*renderable\n * content*](#Renderable-Content).\n * @param {Function} [elseFunc] A Function that returns [*renderable\n * content*](#Renderable-Content) to display in the case when there are no items\n * in the sequence.\n */\nBlaze.Each = function (argFunc, contentFunc, elseFunc) {\n  var eachView = Blaze.View('each', function () {\n    var subviews = this.initialSubviews;\n    this.initialSubviews = null;\n    if (this._isCreatedForExpansion) {\n      this.expandedValueDep = new Tracker.Dependency;\n      this.expandedValueDep.depend();\n    }\n    return subviews;\n  });\n  eachView.initialSubviews = [];\n  eachView.numItems = 0;\n  eachView.inElseMode = false;\n  eachView.stopHandle = null;\n  eachView.contentFunc = contentFunc;\n  eachView.elseFunc = elseFunc;\n  eachView.argVar = new ReactiveVar;\n  eachView.variableName = null;\n\n  // update the @index value in the scope of all subviews in the range\n  var updateIndices = function (from, to) {\n    if (to === undefined) {\n      to = eachView.numItems - 1;\n    }\n\n    for (var i = from; i <= to; i++) {\n      var view = eachView._domrange.members[i].view;\n      view._scopeBindings['@index'].set({ value: i });\n    }\n  };\n\n  eachView.onViewCreated(function () {\n    // We evaluate argFunc in an autorun to make sure\n    // Blaze.currentView is always set when it runs (rather than\n    // passing argFunc straight to ObserveSequence).\n    eachView.autorun(function () {\n      // argFunc can return either a sequence as is or a wrapper object with a\n      // _sequence and _variable fields set.\n      var arg = argFunc();\n      if (isObject(arg) && has(arg, '_sequence')) {\n        eachView.variableName = arg._variable || null;\n        arg = arg._sequence;\n      }\n\n      eachView.argVar.set(arg);\n    }, eachView.parentView, 'collection');\n\n    eachView.stopHandle = ObserveSequence.observe(function () {\n      return eachView.argVar.get();\n    }, {\n      addedAt: function (id, item, index) {\n        Tracker.nonreactive(function () {\n          var newItemView;\n          if (eachView.variableName) {\n            // new-style #each (as in {{#each item in items}})\n            // doesn't create a new data context\n            newItemView = Blaze.View('item', eachView.contentFunc);\n          } else {\n            newItemView = Blaze.With(item, eachView.contentFunc);\n          }\n\n          eachView.numItems++;\n\n          var bindings = {};\n          bindings['@index'] = index;\n          if (eachView.variableName) {\n            bindings[eachView.variableName] = item;\n          }\n          Blaze._attachBindingsToView(bindings, newItemView);\n\n          if (eachView.expandedValueDep) {\n            eachView.expandedValueDep.changed();\n          } else if (eachView._domrange) {\n            if (eachView.inElseMode) {\n              eachView._domrange.removeMember(0);\n              eachView.inElseMode = false;\n            }\n\n            var range = Blaze._materializeView(newItemView, eachView);\n            eachView._domrange.addMember(range, index);\n            updateIndices(index);\n          } else {\n            eachView.initialSubviews.splice(index, 0, newItemView);\n          }\n        });\n      },\n      removedAt: function (id, item, index) {\n        Tracker.nonreactive(function () {\n          eachView.numItems--;\n          if (eachView.expandedValueDep) {\n            eachView.expandedValueDep.changed();\n          } else if (eachView._domrange) {\n            eachView._domrange.removeMember(index);\n            updateIndices(index);\n            if (eachView.elseFunc && eachView.numItems === 0) {\n              eachView.inElseMode = true;\n              eachView._domrange.addMember(\n                Blaze._materializeView(\n                  Blaze.View('each_else',eachView.elseFunc),\n                  eachView), 0);\n            }\n          } else {\n            eachView.initialSubviews.splice(index, 1);\n          }\n        });\n      },\n      changedAt: function (id, newItem, oldItem, index) {\n        Tracker.nonreactive(function () {\n          if (eachView.expandedValueDep) {\n            eachView.expandedValueDep.changed();\n          } else {\n            var itemView;\n            if (eachView._domrange) {\n              itemView = eachView._domrange.getMember(index).view;\n            } else {\n              itemView = eachView.initialSubviews[index];\n            }\n            if (eachView.variableName) {\n              itemView._scopeBindings[eachView.variableName].set({ value: newItem });\n            } else {\n              itemView.dataVar.set(newItem);\n            }\n          }\n        });\n      },\n      movedTo: function (id, item, fromIndex, toIndex) {\n        Tracker.nonreactive(function () {\n          if (eachView.expandedValueDep) {\n            eachView.expandedValueDep.changed();\n          } else if (eachView._domrange) {\n            eachView._domrange.moveMember(fromIndex, toIndex);\n            updateIndices(\n              Math.min(fromIndex, toIndex), Math.max(fromIndex, toIndex));\n          } else {\n            var subviews = eachView.initialSubviews;\n            var itemView = subviews[fromIndex];\n            subviews.splice(fromIndex, 1);\n            subviews.splice(toIndex, 0, itemView);\n          }\n        });\n      }\n    });\n\n    if (eachView.elseFunc && eachView.numItems === 0) {\n      eachView.inElseMode = true;\n      eachView.initialSubviews[0] =\n        Blaze.View('each_else', eachView.elseFunc);\n    }\n  });\n\n  eachView.onViewDestroyed(function () {\n    if (eachView.stopHandle)\n      eachView.stopHandle.stop();\n  });\n\n  return eachView;\n};\n\nBlaze._TemplateWith = function (arg, contentFunc) {\n  var w;\n\n  var argFunc = arg;\n  if (typeof arg !== 'function') {\n    argFunc = function () {\n      return arg;\n    };\n  }\n\n  // This is a little messy.  When we compile `{{> Template.contentBlock}}`, we\n  // wrap it in Blaze._InOuterTemplateScope in order to skip the intermediate\n  // parent Views in the current template.  However, when there's an argument\n  // (`{{> Template.contentBlock arg}}`), the argument needs to be evaluated\n  // in the original scope.  There's no good order to nest\n  // Blaze._InOuterTemplateScope and Blaze._TemplateWith to achieve this,\n  // so we wrap argFunc to run it in the \"original parentView\" of the\n  // Blaze._InOuterTemplateScope.\n  //\n  // To make this better, reconsider _InOuterTemplateScope as a primitive.\n  // Longer term, evaluate expressions in the proper lexical scope.\n  var wrappedArgFunc = function () {\n    var viewToEvaluateArg = null;\n    if (w.parentView && w.parentView.name === 'InOuterTemplateScope') {\n      viewToEvaluateArg = w.parentView.originalParentView;\n    }\n    if (viewToEvaluateArg) {\n      return Blaze._withCurrentView(viewToEvaluateArg, argFunc);\n    } else {\n      return argFunc();\n    }\n  };\n\n  var wrappedContentFunc = function () {\n    var content = contentFunc.call(this);\n\n    // Since we are generating the Blaze._TemplateWith view for the\n    // user, set the flag on the child view.  If `content` is a template,\n    // construct the View so that we can set the flag.\n    if (content instanceof Blaze.Template) {\n      content = content.constructView();\n    }\n    if (content instanceof Blaze.View) {\n      content._hasGeneratedParent = true;\n    }\n\n    return content;\n  };\n\n  w = Blaze.With(wrappedArgFunc, wrappedContentFunc);\n  w.__isTemplateWith = true;\n  return w;\n};\n\nBlaze._InOuterTemplateScope = function (templateView, contentFunc) {\n  var view = Blaze.View('InOuterTemplateScope', contentFunc);\n  var parentView = templateView.parentView;\n\n  // Hack so that if you call `{{> foo bar}}` and it expands into\n  // `{{#with bar}}{{> foo}}{{/with}}`, and then `foo` is a template\n  // that inserts `{{> Template.contentBlock}}`, the data context for\n  // `Template.contentBlock` is not `bar` but the one enclosing that.\n  if (parentView.__isTemplateWith)\n    parentView = parentView.parentView;\n\n  view.onViewCreated(function () {\n    this.originalParentView = this.parentView;\n    this.parentView = parentView;\n    this.__childDoesntStartNewLexicalScope = true;\n  });\n  return view;\n};\n\n"],"mappings":"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"},"sourceType":"module","externalDependencies":{},"hash":"485162214d7db71091003ffe8576389a7b14436d"}
