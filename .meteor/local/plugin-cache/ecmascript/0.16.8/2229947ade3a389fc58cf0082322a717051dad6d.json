{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"D:\\mergerware\\loan-management-app\\packages\\accounts-ui-unstyled\\accounts_ui.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/accounts-ui-unstyled/accounts_ui.js","filename":"D:\\mergerware\\loan-management-app\\packages\\accounts-ui-unstyled\\accounts_ui.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"D:\\mergerware\\loan-management-app","root":"D:\\mergerware\\loan-management-app","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"D:\\mergerware\\loan-management-app\\packages\\accounts-ui-unstyled\\accounts_ui.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/accounts-ui-unstyled/accounts_ui.js"}},"code":"module.export({\n  passwordSignupFields: () => passwordSignupFields,\n  passwordlessSignupFields: () => passwordlessSignupFields\n});\n/**\n * @summary Accounts UI\n * @namespace\n * @memberOf Accounts\n * @importFromPackage accounts-base\n */\nAccounts.ui = {\n  _options: {\n    requestPermissions: Object.create(null),\n    requestOfflineToken: Object.create(null),\n    forceApprovalPrompt: Object.create(null)\n  }\n};\nconst VALID_OPTIONS = new Set().add('passwordSignupFields').add('requestPermissions').add('requestOfflineToken').add('forceApprovalPrompt').add('passwordlessSignupFields');\nconst VALID_PASSWORD_SIGNUP_FIELDS = new Set().add('USERNAME_AND_EMAIL').add('USERNAME_AND_OPTIONAL_EMAIL').add('USERNAME_ONLY').add('EMAIL_ONLY');\nfunction isValidPasswordSignupField(field) {\n  return VALID_PASSWORD_SIGNUP_FIELDS.has(field);\n}\nconst VALID_PASSWORDLESS_SIGNUP_FIELDS = new Set().add('USERNAME_AND_EMAIL').add('EMAIL_ONLY');\nfunction isValidPasswordlessSignupField(field) {\n  return VALID_PASSWORDLESS_SIGNUP_FIELDS.has(field);\n}\n\n/**\n * @summary Configure the behavior of [`{{> loginButtons}}`](#accountsui).\n * @locus Client\n * @param {Object} options\n * @param {Object} options.requestPermissions Which [permissions](#requestpermissions) to request from the user for each external service.\n * @param {Object} options.requestOfflineToken To ask the user for permission to act on their behalf when offline, map the relevant external service to `true`. Currently only supported with Google. See [Meteor.loginWithExternalService](#meteor_loginwithexternalservice) for more details.\n * @param {Object} options.forceApprovalPrompt If true, forces the user to approve the app's permissions, even if previously approved. Currently only supported with Google.\n * @param {String} options.passwordSignupFields Which fields to display in the user creation form. One of '`USERNAME_AND_EMAIL`', '`USERNAME_AND_OPTIONAL_EMAIL`', '`USERNAME_ONLY`', or '`EMAIL_ONLY`' (default).\n * @param {String} options.passwordlessSignupFields Which fields to display in the user creation form. One of '`USERNAME_AND_EMAIL`', '`EMAIL_ONLY`' (default).\n * @importFromPackage accounts-base\n */\nAccounts.ui.config = options => {\n  Object.keys(options).forEach(key => {\n    if (!VALID_OPTIONS.has(key)) {\n      throw new Error(\"Accounts.ui.config: Invalid option: \".concat(key));\n    }\n  });\n  handlePasswordSignupFields(options);\n  handlePasswordlessSignupFields(options);\n  handleRequestPermissions(options);\n  handleRequestOfflineToken(options);\n  handleForceApprovalPrompt(options);\n};\nMeteor.startup(function () {\n  var _Meteor$settings$publ, _Meteor$settings$publ2;\n  const settings = (_Meteor$settings$publ = Meteor.settings.public) === null || _Meteor$settings$publ === void 0 ? void 0 : (_Meteor$settings$publ2 = _Meteor$settings$publ.packages) === null || _Meteor$settings$publ2 === void 0 ? void 0 : _Meteor$settings$publ2['accounts-ui-unstyled'];\n  if (settings) {\n    Accounts.ui.config(settings);\n  }\n});\nfunction handlePasswordlessSignupFields(options) {\n  let {\n    passwordlessSignupFields\n  } = options;\n  if (passwordlessSignupFields) {\n    const reportInvalid = () => {\n      throw new Error(\"Accounts.ui.config: Invalid option for `passwordlessSignupFields`: \".concat(passwordlessSignupFields));\n    };\n    if (typeof passwordlessSignupFields === 'string') {\n      passwordlessSignupFields = [passwordlessSignupFields];\n    } else if (!Array.isArray(passwordlessSignupFields)) {\n      reportInvalid();\n    }\n    if (passwordlessSignupFields.every(isValidPasswordlessSignupField)) {\n      if (Accounts.ui._options.passwordlessSignupFields) {\n        throw new Error(\"Accounts.ui.config: Can't set `passwordlessSignupFields` more than once\");\n      }\n      Object.assign(Accounts.ui._options, {\n        passwordlessSignupFields\n      });\n      return;\n    }\n    reportInvalid();\n  }\n}\nfunction handlePasswordSignupFields(options) {\n  let {\n    passwordSignupFields\n  } = options;\n  if (passwordSignupFields) {\n    const reportInvalid = () => {\n      throw new Error(\"Accounts.ui.config: Invalid option for `passwordSignupFields`: \".concat(passwordSignupFields));\n    };\n    if (typeof passwordSignupFields === 'string') {\n      passwordSignupFields = [passwordSignupFields];\n    } else if (!Array.isArray(passwordSignupFields)) {\n      reportInvalid();\n    }\n    if (passwordSignupFields.every(isValidPasswordSignupField)) {\n      if (Accounts.ui._options.passwordSignupFields) {\n        throw new Error(\"Accounts.ui.config: Can't set `passwordSignupFields` more than once\");\n      }\n      Object.assign(Accounts.ui._options, {\n        passwordSignupFields\n      });\n      return;\n    }\n    reportInvalid();\n  }\n}\nfunction passwordSignupFields() {\n  const {\n    passwordSignupFields\n  } = Accounts.ui._options;\n  if (Array.isArray(passwordSignupFields)) {\n    return passwordSignupFields;\n  }\n  if (typeof passwordSignupFields === 'string') {\n    return [passwordSignupFields];\n  }\n  return ['EMAIL_ONLY'];\n}\nfunction passwordlessSignupFields() {\n  const {\n    passwordlessSignupFields\n  } = Accounts.ui._options;\n  if (Array.isArray(passwordlessSignupFields)) {\n    return passwordlessSignupFields;\n  }\n  if (typeof passwordlessSignupFields === 'string') {\n    return [passwordlessSignupFields];\n  }\n  return ['EMAIL_ONLY'];\n}\nfunction handleRequestPermissions(_ref) {\n  let {\n    requestPermissions\n  } = _ref;\n  if (requestPermissions) {\n    Object.keys(requestPermissions).forEach(service => {\n      if (Accounts.ui._options.requestPermissions[service]) {\n        throw new Error(\"Accounts.ui.config: Can't set `requestPermissions` more than once for \".concat(service));\n      }\n      const scope = requestPermissions[service];\n      if (!Array.isArray(scope)) {\n        throw new Error('Accounts.ui.config: Value for `requestPermissions` must be an array');\n      }\n      Accounts.ui._options.requestPermissions[service] = scope;\n    });\n  }\n}\nfunction handleRequestOfflineToken(_ref2) {\n  let {\n    requestOfflineToken\n  } = _ref2;\n  if (requestOfflineToken) {\n    Object.keys(requestOfflineToken).forEach(service => {\n      if (service !== 'google') {\n        throw new Error('Accounts.ui.config: `requestOfflineToken` only supported for Google login at the moment.');\n      }\n      if (Accounts.ui._options.requestOfflineToken[service]) {\n        throw new Error(\"Accounts.ui.config: Can't set `requestOfflineToken` more than once for \".concat(service));\n      }\n      Accounts.ui._options.requestOfflineToken[service] = requestOfflineToken[service];\n    });\n  }\n}\nfunction handleForceApprovalPrompt(_ref3) {\n  let {\n    forceApprovalPrompt\n  } = _ref3;\n  if (forceApprovalPrompt) {\n    Object.keys(forceApprovalPrompt).forEach(service => {\n      if (service !== 'google') {\n        throw new Error('Accounts.ui.config: `forceApprovalPrompt` only supported for Google login at the moment.');\n      }\n      if (Accounts.ui._options.forceApprovalPrompt[service]) {\n        throw new Error(\"Accounts.ui.config: Can't set `forceApprovalPrompt` more than once for \".concat(service));\n      }\n      Accounts.ui._options.forceApprovalPrompt[service] = forceApprovalPrompt[service];\n    });\n  }\n}","map":{"version":3,"names":["module","export","passwordSignupFields","passwordlessSignupFields","Accounts","ui","_options","requestPermissions","Object","create","requestOfflineToken","forceApprovalPrompt","VALID_OPTIONS","Set","add","VALID_PASSWORD_SIGNUP_FIELDS","isValidPasswordSignupField","field","has","VALID_PASSWORDLESS_SIGNUP_FIELDS","isValidPasswordlessSignupField","config","options","keys","forEach","key","Error","concat","handlePasswordSignupFields","handlePasswordlessSignupFields","handleRequestPermissions","handleRequestOfflineToken","handleForceApprovalPrompt","Meteor","startup","_Meteor$settings$publ","_Meteor$settings$publ2","settings","public","packages","reportInvalid","Array","isArray","every","assign","_ref","service","scope","_ref2","_ref3"],"sources":["packages/accounts-ui-unstyled/accounts_ui.js"],"sourcesContent":["/**\n * @summary Accounts UI\n * @namespace\n * @memberOf Accounts\n * @importFromPackage accounts-base\n */\nAccounts.ui = {\n  _options: {\n    requestPermissions: Object.create(null),\n    requestOfflineToken: Object.create(null),\n    forceApprovalPrompt: Object.create(null),\n  },\n};\n\nconst VALID_OPTIONS = new Set()\n  .add('passwordSignupFields')\n  .add('requestPermissions')\n  .add('requestOfflineToken')\n  .add('forceApprovalPrompt')\n  .add('passwordlessSignupFields');\n\nconst VALID_PASSWORD_SIGNUP_FIELDS = new Set()\n  .add('USERNAME_AND_EMAIL')\n  .add('USERNAME_AND_OPTIONAL_EMAIL')\n  .add('USERNAME_ONLY')\n  .add('EMAIL_ONLY');\n\nfunction isValidPasswordSignupField(field) {\n  return VALID_PASSWORD_SIGNUP_FIELDS.has(field);\n}\n\nconst VALID_PASSWORDLESS_SIGNUP_FIELDS = new Set()\n  .add('USERNAME_AND_EMAIL')\n  .add('EMAIL_ONLY');\n\nfunction isValidPasswordlessSignupField(field) {\n  return VALID_PASSWORDLESS_SIGNUP_FIELDS.has(field);\n}\n\n/**\n * @summary Configure the behavior of [`{{> loginButtons}}`](#accountsui).\n * @locus Client\n * @param {Object} options\n * @param {Object} options.requestPermissions Which [permissions](#requestpermissions) to request from the user for each external service.\n * @param {Object} options.requestOfflineToken To ask the user for permission to act on their behalf when offline, map the relevant external service to `true`. Currently only supported with Google. See [Meteor.loginWithExternalService](#meteor_loginwithexternalservice) for more details.\n * @param {Object} options.forceApprovalPrompt If true, forces the user to approve the app's permissions, even if previously approved. Currently only supported with Google.\n * @param {String} options.passwordSignupFields Which fields to display in the user creation form. One of '`USERNAME_AND_EMAIL`', '`USERNAME_AND_OPTIONAL_EMAIL`', '`USERNAME_ONLY`', or '`EMAIL_ONLY`' (default).\n * @param {String} options.passwordlessSignupFields Which fields to display in the user creation form. One of '`USERNAME_AND_EMAIL`', '`EMAIL_ONLY`' (default).\n * @importFromPackage accounts-base\n */\nAccounts.ui.config = options => {\n  Object.keys(options).forEach(key => {\n    if (!VALID_OPTIONS.has(key)) {\n      throw new Error(`Accounts.ui.config: Invalid option: ${key}`);\n    }\n  });\n\n  handlePasswordSignupFields(options);\n  handlePasswordlessSignupFields(options);\n  handleRequestPermissions(options);\n  handleRequestOfflineToken(options);\n  handleForceApprovalPrompt(options);\n};\n\nMeteor.startup(function() {\n  const settings = Meteor.settings.public?.packages?.['accounts-ui-unstyled'];\n\n  if (settings) {\n    Accounts.ui.config(settings);\n  }\n});\n\nfunction handlePasswordlessSignupFields(options) {\n  let { passwordlessSignupFields } = options;\n\n  if (passwordlessSignupFields) {\n    const reportInvalid = () => {\n      throw new Error(\n        `Accounts.ui.config: Invalid option for \\`passwordlessSignupFields\\`: ${passwordlessSignupFields}`\n      );\n    };\n\n    if (typeof passwordlessSignupFields === 'string') {\n      passwordlessSignupFields = [passwordlessSignupFields];\n    } else if (!Array.isArray(passwordlessSignupFields)) {\n      reportInvalid();\n    }\n\n    if (passwordlessSignupFields.every(isValidPasswordlessSignupField)) {\n      if (Accounts.ui._options.passwordlessSignupFields) {\n        throw new Error(\n          \"Accounts.ui.config: Can't set `passwordlessSignupFields` more than once\"\n        );\n      }\n      Object.assign(Accounts.ui._options, { passwordlessSignupFields });\n      return;\n    }\n\n    reportInvalid();\n  }\n}\n\nfunction handlePasswordSignupFields(options) {\n  let { passwordSignupFields } = options;\n\n  if (passwordSignupFields) {\n    const reportInvalid = () => {\n      throw new Error(\n        `Accounts.ui.config: Invalid option for \\`passwordSignupFields\\`: ${passwordSignupFields}`\n      );\n    };\n\n    if (typeof passwordSignupFields === 'string') {\n      passwordSignupFields = [passwordSignupFields];\n    } else if (!Array.isArray(passwordSignupFields)) {\n      reportInvalid();\n    }\n\n    if (passwordSignupFields.every(isValidPasswordSignupField)) {\n      if (Accounts.ui._options.passwordSignupFields) {\n        throw new Error(\n          \"Accounts.ui.config: Can't set `passwordSignupFields` more than once\"\n        );\n      }\n      Object.assign(Accounts.ui._options, { passwordSignupFields });\n      return;\n    }\n\n    reportInvalid();\n  }\n}\n\nexport function passwordSignupFields() {\n  const { passwordSignupFields } = Accounts.ui._options;\n\n  if (Array.isArray(passwordSignupFields)) {\n    return passwordSignupFields;\n  }\n\n  if (typeof passwordSignupFields === 'string') {\n    return [passwordSignupFields];\n  }\n\n  return ['EMAIL_ONLY'];\n}\n\nexport function passwordlessSignupFields() {\n  const { passwordlessSignupFields } = Accounts.ui._options;\n\n  if (Array.isArray(passwordlessSignupFields)) {\n    return passwordlessSignupFields;\n  }\n\n  if (typeof passwordlessSignupFields === 'string') {\n    return [passwordlessSignupFields];\n  }\n\n  return ['EMAIL_ONLY'];\n}\n\nfunction handleRequestPermissions({ requestPermissions }) {\n  if (requestPermissions) {\n    Object.keys(requestPermissions).forEach(service => {\n      if (Accounts.ui._options.requestPermissions[service]) {\n        throw new Error(\n          `Accounts.ui.config: Can't set \\`requestPermissions\\` more than once for ${service}`\n        );\n      }\n\n      const scope = requestPermissions[service];\n\n      if (!Array.isArray(scope)) {\n        throw new Error(\n          'Accounts.ui.config: Value for `requestPermissions` must be an array'\n        );\n      }\n\n      Accounts.ui._options.requestPermissions[service] = scope;\n    });\n  }\n}\n\nfunction handleRequestOfflineToken({ requestOfflineToken }) {\n  if (requestOfflineToken) {\n    Object.keys(requestOfflineToken).forEach(service => {\n      if (service !== 'google') {\n        throw new Error(\n          'Accounts.ui.config: `requestOfflineToken` only supported for Google login at the moment.'\n        );\n      }\n\n      if (Accounts.ui._options.requestOfflineToken[service]) {\n        throw new Error(\n          `Accounts.ui.config: Can't set \\`requestOfflineToken\\` more than once for ${service}`\n        );\n      }\n\n      Accounts.ui._options.requestOfflineToken[service] =\n        requestOfflineToken[service];\n    });\n  }\n}\n\nfunction handleForceApprovalPrompt({ forceApprovalPrompt }) {\n  if (forceApprovalPrompt) {\n    Object.keys(forceApprovalPrompt).forEach(service => {\n      if (service !== 'google') {\n        throw new Error(\n          'Accounts.ui.config: `forceApprovalPrompt` only supported for Google login at the moment.'\n        );\n      }\n\n      if (Accounts.ui._options.forceApprovalPrompt[service]) {\n        throw new Error(\n          `Accounts.ui.config: Can't set \\`forceApprovalPrompt\\` more than once for ${service}`\n        );\n      }\n\n      Accounts.ui._options.forceApprovalPrompt[service] =\n        forceApprovalPrompt[service];\n    });\n  }\n}\n"],"mappings":"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"},"sourceType":"module","externalDependencies":{},"hash":"2229947ade3a389fc58cf0082322a717051dad6d"}
