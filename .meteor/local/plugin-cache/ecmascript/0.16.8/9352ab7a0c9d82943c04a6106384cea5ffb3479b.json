{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"D:\\mergerware\\loan-management-app\\packages\\accounts-ui-unstyled\\login_buttons_dialogs.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/accounts-ui-unstyled/login_buttons_dialogs.js","filename":"D:\\mergerware\\loan-management-app\\packages\\accounts-ui-unstyled\\login_buttons_dialogs.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"D:\\mergerware\\loan-management-app","root":"D:\\mergerware\\loan-management-app","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"D:\\mergerware\\loan-management-app\\packages\\accounts-ui-unstyled\\login_buttons_dialogs.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/accounts-ui-unstyled/login_buttons_dialogs.js"}},"code":"let displayName, dropdown, validatePassword;\nmodule.link(\"./login_buttons.js\", {\n  displayName(v) {\n    displayName = v;\n  },\n  dropdown(v) {\n    dropdown = v;\n  },\n  validatePassword(v) {\n    validatePassword = v;\n  }\n}, 0);\n// for convenience\nconst loginButtonsSession = Accounts._loginButtonsSession;\n\n// since we don't want to pass around the callback that we get from our event\n// handlers, we just make it a variable for the whole file\nlet doneCallback;\nAccounts.onResetPasswordLink((token, done) => {\n  loginButtonsSession.set(\"resetPasswordToken\", token);\n  doneCallback = done;\n});\nAccounts.onEnrollmentLink((token, done) => {\n  loginButtonsSession.set(\"enrollAccountToken\", token);\n  doneCallback = done;\n});\nAccounts.onEmailVerificationLink((token, done) => {\n  Accounts.verifyEmail(token, error => {\n    if (!error) {\n      loginButtonsSession.set('justVerifiedEmail', true);\n    }\n    done();\n    // XXX show something if there was an error.\n  });\n});\n\n//\n// resetPasswordDialog template\n//\n\nTemplate._resetPasswordDialog.events({\n  'click #login-buttons-reset-password-button': () => resetPassword(),\n  'keypress #reset-password-new-password': event => {\n    if (event.keyCode === 13) resetPassword();\n  },\n  'click #login-buttons-cancel-reset-password': () => {\n    loginButtonsSession.set('resetPasswordToken', null);\n    if (doneCallback) doneCallback();\n  }\n});\nconst resetPassword = () => {\n  loginButtonsSession.resetMessages();\n  const newPassword = document.getElementById('reset-password-new-password').value;\n  if (!validatePassword(newPassword)) return;\n  Accounts.resetPassword(loginButtonsSession.get('resetPasswordToken'), newPassword, error => {\n    if (error) {\n      loginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n    } else {\n      loginButtonsSession.set('resetPasswordToken', null);\n      loginButtonsSession.set('justResetPassword', true);\n      if (doneCallback) doneCallback();\n    }\n  });\n};\nTemplate._resetPasswordDialog.helpers({\n  displayName,\n  inResetPasswordFlow: () => loginButtonsSession.get('resetPasswordToken')\n});\n\n//\n// justResetPasswordDialog template\n//\n\nTemplate._justResetPasswordDialog.events({\n  'click #just-verified-dismiss-button': () => loginButtonsSession.set('justResetPassword', false)\n});\nTemplate._justResetPasswordDialog.helpers({\n  visible: () => loginButtonsSession.get('justResetPassword'),\n  displayName\n});\n\n//\n// enrollAccountDialog template\n//\n\nconst enrollAccount = () => {\n  loginButtonsSession.resetMessages();\n  const password = document.getElementById('enroll-account-password').value;\n  if (!validatePassword(password)) return;\n  Accounts.resetPassword(loginButtonsSession.get('enrollAccountToken'), password, error => {\n    if (error) {\n      loginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n    } else {\n      loginButtonsSession.set('enrollAccountToken', null);\n      if (doneCallback) doneCallback();\n    }\n  });\n};\nTemplate._enrollAccountDialog.events({\n  'click #login-buttons-enroll-account-button': enrollAccount,\n  'keypress #enroll-account-password': event => {\n    if (event.keyCode === 13) enrollAccount();\n  },\n  'click #login-buttons-cancel-enroll-account': () => {\n    loginButtonsSession.set('enrollAccountToken', null);\n    if (doneCallback) doneCallback();\n  }\n});\nTemplate._enrollAccountDialog.helpers({\n  displayName,\n  inEnrollAccountFlow: () => loginButtonsSession.get('enrollAccountToken')\n});\n\n//\n// justVerifiedEmailDialog template\n//\n\nTemplate._justVerifiedEmailDialog.events({\n  'click #just-verified-dismiss-button': () => loginButtonsSession.set('justVerifiedEmail', false)\n});\nTemplate._justVerifiedEmailDialog.helpers({\n  visible: () => loginButtonsSession.get('justVerifiedEmail'),\n  displayName\n});\n\n//\n// loginButtonsMessagesDialog template\n//\n\nTemplate._loginButtonsMessagesDialog.events({\n  'click #messages-dialog-dismiss-button': () => loginButtonsSession.resetMessages()\n});\nTemplate._loginButtonsMessagesDialog.helpers({\n  visible: () => {\n    const hasMessage = loginButtonsSession.get('infoMessage') || loginButtonsSession.get('errorMessage');\n    return !dropdown() && hasMessage;\n  }\n});\n\n//\n// configureLoginServiceDialog template\n//\n\nTemplate._configureLoginServiceDialog.events({\n  'click .configure-login-service-dismiss-button': () => loginButtonsSession.set('configureLoginServiceDialogVisible', false),\n  'click #configure-login-service-dialog-save-configuration': () => {\n    if (loginButtonsSession.get('configureLoginServiceDialogVisible') && !loginButtonsSession.get('configureLoginServiceDialogSaveDisabled')) {\n      // Prepare the configuration document for this login service\n      const serviceName = loginButtonsSession.get('configureLoginServiceDialogServiceName');\n      const configuration = {\n        service: serviceName\n      };\n\n      // Fetch the value of each input field\n      configurationFields().forEach(field => {\n        configuration[field.property] = document.getElementById(\"configure-login-service-dialog-\".concat(field.property)).value.replace(/^\\s*|\\s*$/g, \"\"); // trim() doesnt work on IE8;\n      });\n\n      // Replacement of single use of jQuery in this package so we can remove\n      // the dependency\n      const inputs = [].slice.call(\n      // Because HTMLCollections aren't arrays\n      document.getElementById('configure-login-service-dialog').getElementsByTagName('input'));\n      configuration.loginStyle = document.querySelector('#configure-login-service-dialog input[name=\"loginStyle\"]:checked').value;\n\n      // Configure this login service\n      Accounts.connection.call(\"configureLoginService\", configuration, (error, result) => {\n        if (error) Meteor._debug(\"Error configuring login service \".concat(serviceName), error);else loginButtonsSession.set('configureLoginServiceDialogVisible', false);\n      });\n    }\n  },\n  // IE8 doesn't support the 'input' event, so we'll run this on the keyup as\n  // well. (Keeping the 'input' event means that this also fires when you use\n  // the mouse to change the contents of the field, eg 'Cut' menu item.)\n  'input, keyup input': event => {\n    // if the event fired on one of the configuration input fields,\n    // check whether we should enable the 'save configuration' button\n    if (event.target.id.indexOf('configure-login-service-dialog') === 0) updateSaveDisabled();\n  }\n});\n\n// check whether the 'save configuration' button should be enabled.\n// this is a really strange way to implement this and a Forms\n// Abstraction would make all of this reactive, and simpler.\nconst updateSaveDisabled = () => {\n  const anyFieldEmpty = configurationFields().reduce((prev, field) => prev || document.getElementById(\"configure-login-service-dialog-\".concat(field.property)).value === '', false);\n  loginButtonsSession.set('configureLoginServiceDialogSaveDisabled', anyFieldEmpty);\n};\n\n// Returns the appropriate template for this login service.  This\n// template should be defined in the service's package\nTemplate._configureLoginServiceDialog.templateForService = serviceName => {\n  serviceName = serviceName || loginButtonsSession.get('configureLoginServiceDialogServiceName');\n  // XXX Service providers should be able to specify their configuration\n  // template name.\n  return Template[\"configureLoginServiceDialogFor\".concat(serviceName === 'meteor-developer' ? 'MeteorDeveloper' : capitalize(serviceName))];\n};\nconst configurationFields = () => {\n  const template = Template._configureLoginServiceDialog.templateForService();\n  return template.fields();\n};\nTemplate._configureLoginServiceDialog.helpers({\n  configurationFields,\n  visible: () => loginButtonsSession.get('configureLoginServiceDialogVisible'),\n  // renders the appropriate template\n  configurationSteps: () => Template._configureLoginServiceDialog.templateForService(),\n  saveDisabled: () => loginButtonsSession.get('configureLoginServiceDialogSaveDisabled')\n});\n\n// XXX from http://epeli.github.com/underscore.string/lib/underscore.string.js\nconst capitalize = str => {\n  str = str == null ? '' : String(str);\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\nTemplate._configureLoginOnDesktopDialog.helpers({\n  visible: () => loginButtonsSession.get('configureOnDesktopVisible')\n});\nTemplate._configureLoginOnDesktopDialog.events({\n  'click #configure-on-desktop-dismiss-button': () => loginButtonsSession.set('configureOnDesktopVisible', false)\n});","map":{"version":3,"names":["displayName","dropdown","validatePassword","module","link","v","loginButtonsSession","Accounts","_loginButtonsSession","doneCallback","onResetPasswordLink","token","done","set","onEnrollmentLink","onEmailVerificationLink","verifyEmail","error","Template","_resetPasswordDialog","events","click #login-buttons-reset-password-button","resetPassword","event","keyCode","click #login-buttons-cancel-reset-password","resetMessages","newPassword","document","getElementById","value","get","errorMessage","reason","helpers","inResetPasswordFlow","_justResetPasswordDialog","click #just-verified-dismiss-button","visible","enrollAccount","password","_enrollAccountDialog","click #login-buttons-cancel-enroll-account","inEnrollAccountFlow","_justVerifiedEmailDialog","_loginButtonsMessagesDialog","click #messages-dialog-dismiss-button","hasMessage","_configureLoginServiceDialog","click .configure-login-service-dismiss-button","click #configure-login-service-dialog-save-configuration","serviceName","configuration","service","configurationFields","forEach","field","property","concat","replace","inputs","slice","call","getElementsByTagName","loginStyle","querySelector","connection","result","Meteor","_debug","target","id","indexOf","updateSaveDisabled","anyFieldEmpty","reduce","prev","templateForService","capitalize","template","fields","configurationSteps","saveDisabled","str","String","charAt","toUpperCase","_configureLoginOnDesktopDialog","click #configure-on-desktop-dismiss-button"],"sources":["packages/accounts-ui-unstyled/login_buttons_dialogs.js"],"sourcesContent":["import { displayName, dropdown, validatePassword } from './login_buttons.js';\n// for convenience\nconst loginButtonsSession = Accounts._loginButtonsSession;\n\n// since we don't want to pass around the callback that we get from our event\n// handlers, we just make it a variable for the whole file\nlet doneCallback;\n\nAccounts.onResetPasswordLink((token, done) => {\n  loginButtonsSession.set(\"resetPasswordToken\", token);\n  doneCallback = done;\n});\n\nAccounts.onEnrollmentLink((token, done) => {\n  loginButtonsSession.set(\"enrollAccountToken\", token);\n  doneCallback = done;\n});\n\nAccounts.onEmailVerificationLink((token, done) => {\n  Accounts.verifyEmail(token, error => {\n    if (! error) {\n      loginButtonsSession.set('justVerifiedEmail', true);\n    }\n\n    done();\n    // XXX show something if there was an error.\n  });\n});\n\n\n//\n// resetPasswordDialog template\n//\n\nTemplate._resetPasswordDialog.events({\n  'click #login-buttons-reset-password-button': () => resetPassword(),\n  'keypress #reset-password-new-password': event => {\n    if (event.keyCode === 13)\n      resetPassword();\n  },\n  'click #login-buttons-cancel-reset-password': () => {\n    loginButtonsSession.set('resetPasswordToken', null);\n    if (doneCallback)\n      doneCallback();\n  }\n});\n\nconst resetPassword = () => {\n  loginButtonsSession.resetMessages();\n  const newPassword = document.getElementById('reset-password-new-password').value;\n  if (!validatePassword(newPassword))\n    return;\n\n  Accounts.resetPassword(\n    loginButtonsSession.get('resetPasswordToken'), newPassword,\n    error => {\n      if (error) {\n        loginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n      } else {\n        loginButtonsSession.set('resetPasswordToken', null);\n        loginButtonsSession.set('justResetPassword', true);\n        if (doneCallback)\n          doneCallback();\n      }\n    });\n};\n\nTemplate._resetPasswordDialog.helpers({\n  displayName,\n  inResetPasswordFlow: () => loginButtonsSession.get('resetPasswordToken'),\n});\n\n//\n// justResetPasswordDialog template\n//\n\nTemplate._justResetPasswordDialog.events({\n  'click #just-verified-dismiss-button': () =>\n    loginButtonsSession.set('justResetPassword', false),\n});\n\nTemplate._justResetPasswordDialog.helpers({\n  visible: () => loginButtonsSession.get('justResetPassword'),\n  displayName,\n});\n\n\n\n//\n// enrollAccountDialog template\n//\n\nconst enrollAccount = () => {\n  loginButtonsSession.resetMessages();\n  const password = document.getElementById('enroll-account-password').value;\n  if (!validatePassword(password))\n    return;\n\n  Accounts.resetPassword(\n    loginButtonsSession.get('enrollAccountToken'), password,\n    error => {\n      if (error) {\n        loginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n      } else {\n        loginButtonsSession.set('enrollAccountToken', null);\n        if (doneCallback)\n          doneCallback();\n      }\n    });\n};\n\nTemplate._enrollAccountDialog.events({\n  'click #login-buttons-enroll-account-button': enrollAccount,\n  'keypress #enroll-account-password': event => {\n    if (event.keyCode === 13)\n      enrollAccount();\n  },\n  'click #login-buttons-cancel-enroll-account': () => {\n    loginButtonsSession.set('enrollAccountToken', null);\n    if (doneCallback)\n      doneCallback();\n  }\n});\n\nTemplate._enrollAccountDialog.helpers({\n  displayName,\n  inEnrollAccountFlow: () => loginButtonsSession.get('enrollAccountToken'),\n});\n\n\n//\n// justVerifiedEmailDialog template\n//\n\nTemplate._justVerifiedEmailDialog.events({\n  'click #just-verified-dismiss-button': () =>\n    loginButtonsSession.set('justVerifiedEmail', false),\n});\n\nTemplate._justVerifiedEmailDialog.helpers({\n  visible: () => loginButtonsSession.get('justVerifiedEmail'),\n  displayName,\n});\n\n\n//\n// loginButtonsMessagesDialog template\n//\n\nTemplate._loginButtonsMessagesDialog.events({\n  'click #messages-dialog-dismiss-button': () =>\n    loginButtonsSession.resetMessages(),\n});\n\nTemplate._loginButtonsMessagesDialog.helpers({\n  visible: () => {\n    const hasMessage = loginButtonsSession.get('infoMessage') || loginButtonsSession.get('errorMessage');\n    return !dropdown() && hasMessage;\n  }\n});\n\n\n//\n// configureLoginServiceDialog template\n//\n\nTemplate._configureLoginServiceDialog.events({\n  'click .configure-login-service-dismiss-button': () =>\n    loginButtonsSession.set('configureLoginServiceDialogVisible', false),\n  'click #configure-login-service-dialog-save-configuration': () => {\n    if (loginButtonsSession.get('configureLoginServiceDialogVisible') &&\n        ! loginButtonsSession.get('configureLoginServiceDialogSaveDisabled')) {\n      // Prepare the configuration document for this login service\n      const serviceName = loginButtonsSession.get('configureLoginServiceDialogServiceName');\n      const configuration = {\n        service: serviceName\n      };\n\n      // Fetch the value of each input field\n      configurationFields().forEach(field => {\n        configuration[field.property] = document.getElementById(\n          `configure-login-service-dialog-${field.property}`).value\n          .replace(/^\\s*|\\s*$/g, \"\"); // trim() doesnt work on IE8;\n      });\n\n      // Replacement of single use of jQuery in this package so we can remove\n      // the dependency\n      const inputs = [].slice.call( // Because HTMLCollections aren't arrays\n        document\n          .getElementById('configure-login-service-dialog')\n          .getElementsByTagName('input')\n      );\n\n      configuration.loginStyle =\n        document.querySelector('#configure-login-service-dialog input[name=\"loginStyle\"]:checked').value;\n\n      // Configure this login service\n      Accounts.connection.call(\n        \"configureLoginService\", configuration, (error, result) => {\n          if (error)\n            Meteor._debug(`Error configuring login service ${serviceName}`,\n                          error);\n          else\n            loginButtonsSession.set('configureLoginServiceDialogVisible',\n                                    false);\n        });\n    }\n  },\n  // IE8 doesn't support the 'input' event, so we'll run this on the keyup as\n  // well. (Keeping the 'input' event means that this also fires when you use\n  // the mouse to change the contents of the field, eg 'Cut' menu item.)\n  'input, keyup input': event => {\n    // if the event fired on one of the configuration input fields,\n    // check whether we should enable the 'save configuration' button\n    if (event.target.id.indexOf('configure-login-service-dialog') === 0)\n      updateSaveDisabled();\n  }\n});\n\n// check whether the 'save configuration' button should be enabled.\n// this is a really strange way to implement this and a Forms\n// Abstraction would make all of this reactive, and simpler.\nconst updateSaveDisabled = () => {\n  const anyFieldEmpty = configurationFields().reduce((prev, field) =>\n    prev || document.getElementById(\n      `configure-login-service-dialog-${field.property}`\n    ).value === '',\n    false\n  );\n\n  loginButtonsSession.set('configureLoginServiceDialogSaveDisabled', anyFieldEmpty);\n};\n\n// Returns the appropriate template for this login service.  This\n// template should be defined in the service's package\nTemplate._configureLoginServiceDialog.templateForService = serviceName => {\n  serviceName = serviceName || loginButtonsSession.get('configureLoginServiceDialogServiceName');\n  // XXX Service providers should be able to specify their configuration\n  // template name.\n  return Template[`configureLoginServiceDialogFor${\n                  serviceName === 'meteor-developer' ?\n                   'MeteorDeveloper' :\n                   capitalize(serviceName)}`];\n};\n\nconst configurationFields = () => {\n  const template = Template._configureLoginServiceDialog.templateForService();\n  return template.fields();\n};\n\nTemplate._configureLoginServiceDialog.helpers({\n  configurationFields,\n  visible: () => loginButtonsSession.get('configureLoginServiceDialogVisible'),\n  // renders the appropriate template\n  configurationSteps: () =>\n    Template._configureLoginServiceDialog.templateForService(),\n  saveDisabled: () =>\n    loginButtonsSession.get('configureLoginServiceDialogSaveDisabled'),\n});\n\n// XXX from http://epeli.github.com/underscore.string/lib/underscore.string.js\nconst capitalize = str => {\n  str = str == null ? '' : String(str);\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\nTemplate._configureLoginOnDesktopDialog.helpers({\n  visible: () => loginButtonsSession.get('configureOnDesktopVisible'),\n});\n\nTemplate._configureLoginOnDesktopDialog.events({\n  'click #configure-on-desktop-dismiss-button': () =>\n    loginButtonsSession.set('configureOnDesktopVisible', false),\n});\n"],"mappings":"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"},"sourceType":"module","externalDependencies":{},"hash":"9352ab7a0c9d82943c04a6106384cea5ffb3479b"}
