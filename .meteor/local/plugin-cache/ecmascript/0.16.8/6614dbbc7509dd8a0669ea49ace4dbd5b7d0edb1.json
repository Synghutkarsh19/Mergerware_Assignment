{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"D:\\mergerware\\loan-management-app\\packages\\blaze\\attrs.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/blaze/attrs.js","filename":"D:\\mergerware\\loan-management-app\\packages\\blaze\\attrs.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"D:\\mergerware\\loan-management-app","root":"D:\\mergerware\\loan-management-app","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"MemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"D:\\mergerware\\loan-management-app\\packages\\blaze\\attrs.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/blaze/attrs.js"}},"code":"var has;\nmodule.link(\"lodash.has\", {\n  \"default\": function (v) {\n    has = v;\n  }\n}, 0);\nvar jsUrlsAllowed = false;\nBlaze._allowJavascriptUrls = function () {\n  jsUrlsAllowed = true;\n};\nBlaze._javascriptUrlsAllowed = function () {\n  return jsUrlsAllowed;\n};\n\n// An AttributeHandler object is responsible for updating a particular attribute\n// of a particular element.  AttributeHandler subclasses implement\n// browser-specific logic for dealing with particular attributes across\n// different browsers.\n//\n// To define a new type of AttributeHandler, use\n// `var FooHandler = AttributeHandler.extend({ update: function ... })`\n// where the `update` function takes arguments `(element, oldValue, value)`.\n// The `element` argument is always the same between calls to `update` on\n// the same instance.  `oldValue` and `value` are each either `null` or\n// a Unicode string of the type that might be passed to the value argument\n// of `setAttribute` (i.e. not an HTML string with character references).\n// When an AttributeHandler is installed, an initial call to `update` is\n// always made with `oldValue = null`.  The `update` method can access\n// `this.name` if the AttributeHandler class is a generic one that applies\n// to multiple attribute names.\n//\n// AttributeHandlers can store custom properties on `this`, as long as they\n// don't use the names `element`, `name`, `value`, and `oldValue`.\n//\n// AttributeHandlers can't influence how attributes appear in rendered HTML,\n// only how they are updated after materialization as DOM.\n\nAttributeHandler = function (name, value) {\n  this.name = name;\n  this.value = value;\n};\nBlaze._AttributeHandler = AttributeHandler;\nAttributeHandler.prototype.update = function (element, oldValue, value) {\n  if (value === null) {\n    if (oldValue !== null) element.removeAttribute(this.name);\n  } else {\n    element.setAttribute(this.name, value);\n  }\n};\nAttributeHandler.extend = function (options) {\n  var curType = this;\n  var subType = function () {\n    function AttributeHandlerSubtype() {\n      AttributeHandler.apply(this, arguments);\n    }\n    return AttributeHandlerSubtype;\n  }(\n    /*arguments*/\n  );\n  subType.prototype = new curType();\n  subType.extend = curType.extend;\n  if (options) {\n    Object.assign(subType.prototype, options);\n  }\n  return subType;\n};\n\n/// Apply the diff between the attributes of \"oldValue\" and \"value\" to \"element.\"\n//\n// Each subclass must implement a parseValue method which takes a string\n// as an input and returns an ordered dict of attributes. The keys of the dict\n// are unique identifiers (ie. css properties in the case of styles), and the\n// values are the entire attribute which will be injected into the element.\n//\n// Extended below to support classes, SVG elements and styles.\n\nBlaze._DiffingAttributeHandler = AttributeHandler.extend({\n  update: function (element, oldValue, value) {\n    if (!this.getCurrentValue || !this.setValue || !this.parseValue || !this.joinValues) throw new Error(\"Missing methods in subclass of 'DiffingAttributeHandler'\");\n    var oldAttrsMap = oldValue ? this.parseValue(oldValue) : new OrderedDict();\n    var attrsMap = value ? this.parseValue(value) : new OrderedDict();\n\n    // the current attributes on the element, which we will mutate.\n\n    var currentAttrString = this.getCurrentValue(element);\n    var currentAttrsMap = currentAttrString ? this.parseValue(currentAttrString) : new OrderedDict();\n\n    // Any outside changes to attributes we add at the end.\n    currentAttrsMap.forEach(function (value, key, i) {\n      // If the key already exists, we do not use the current value, but the new value.\n      if (attrsMap.has(key)) {\n        return;\n      }\n\n      // Key does not already exist, but it existed before. Which means it was explicitly\n      // removed, so we do not add it.\n      if (oldAttrsMap.has(key)) {\n        return;\n      }\n      attrsMap.append(key, value);\n    });\n    var values = [];\n    attrsMap.forEach(function (value, key, i) {\n      values.push(value);\n    });\n    this.setValue(element, this.joinValues(values));\n  }\n});\nvar ClassHandler = Blaze._DiffingAttributeHandler.extend({\n  // @param rawValue {String}\n  getCurrentValue: function (element) {\n    return element.className;\n  },\n  setValue: function (element, className) {\n    element.className = className;\n  },\n  parseValue: function (attrString) {\n    var tokens = new OrderedDict();\n    attrString.split(' ').forEach(function (token) {\n      if (token) {\n        // Ordered dict requires unique keys.\n        if (!tokens.has(token)) {\n          tokens.append(token, token);\n        }\n      }\n    });\n    return tokens;\n  },\n  joinValues: function (values) {\n    return values.join(' ');\n  }\n});\nvar SVGClassHandler = ClassHandler.extend({\n  getCurrentValue: function (element) {\n    return element.className.baseVal;\n  },\n  setValue: function (element, className) {\n    element.setAttribute('class', className);\n  }\n});\nvar StyleHandler = Blaze._DiffingAttributeHandler.extend({\n  getCurrentValue: function (element) {\n    return element.getAttribute('style');\n  },\n  setValue: function (element, style) {\n    if (style === '') {\n      element.removeAttribute('style');\n    } else {\n      element.setAttribute('style', style);\n    }\n  },\n  // Parse a string to produce a map from property to attribute string.\n  //\n  // Example:\n  // \"color:red; foo:12px\" produces a token {color: \"color:red\", foo:\"foo:12px\"}\n  parseValue: function (attrString) {\n    var tokens = new OrderedDict();\n\n    // Regex for parsing a css attribute declaration, taken from css-parse:\n    // https://github.com/reworkcss/css-parse/blob/7cef3658d0bba872cde05a85339034b187cb3397/index.js#L219\n    var regex = /(\\*?[-#\\/\\*\\\\\\w]+(?:\\[[0-9a-z_-]+\\])?)\\s*:\\s*(?:\\'(?:\\\\\\'|.)*?\\'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+[;\\s]*/g;\n    var match = regex.exec(attrString);\n    while (match) {\n      // match[0] = entire matching string\n      // match[1] = css property\n      // Prefix the token to prevent conflicts with existing properties.\n\n      // We use the last value for the same key.\n      if (tokens.has(match[1])) {\n        tokens.remove(match[1]);\n      }\n      tokens.append(match[1], match[0].trim());\n      match = regex.exec(attrString);\n    }\n    return tokens;\n  },\n  joinValues: function (values) {\n    // TODO: Assure that there is always ; between values. But what is an example where it breaks?\n    return values.join(' ');\n  }\n});\nvar BooleanHandler = AttributeHandler.extend({\n  update: function (element, oldValue, value) {\n    var name = this.name;\n    if (value == null) {\n      if (oldValue != null) element[name] = false;\n    } else {\n      element[name] = true;\n    }\n  }\n});\nvar DOMPropertyHandler = AttributeHandler.extend({\n  update: function (element, oldValue, value) {\n    var name = this.name;\n    if (value !== element[name]) element[name] = value;\n  }\n});\n\n// attributes of the type 'xlink:something' should be set using\n// the correct namespace in order to work\nvar XlinkHandler = AttributeHandler.extend({\n  update: function (element, oldValue, value) {\n    var NS = 'http://www.w3.org/1999/xlink';\n    if (value === null) {\n      if (oldValue !== null) element.removeAttributeNS(NS, this.name);\n    } else {\n      element.setAttributeNS(NS, this.name, this.value);\n    }\n  }\n});\n\n// cross-browser version of `instanceof SVGElement`\nvar isSVGElement = function (elem) {\n  return 'ownerSVGElement' in elem;\n};\nvar isUrlAttribute = function (tagName, attrName) {\n  // Compiled from http://www.w3.org/TR/REC-html40/index/attributes.html\n  // and\n  // http://www.w3.org/html/wg/drafts/html/master/index.html#attributes-1\n  var urlAttrs = {\n    FORM: ['action'],\n    BODY: ['background'],\n    BLOCKQUOTE: ['cite'],\n    Q: ['cite'],\n    DEL: ['cite'],\n    INS: ['cite'],\n    OBJECT: ['classid', 'codebase', 'data', 'usemap'],\n    APPLET: ['codebase'],\n    A: ['href'],\n    AREA: ['href'],\n    LINK: ['href'],\n    IMG: ['longdesc', 'src', 'usemap'],\n    FRAME: ['longdesc', 'src'],\n    IFRAME: ['longdesc', 'src'],\n    HEAD: ['profile'],\n    SCRIPT: ['src'],\n    INPUT: ['src', 'usemap', 'formaction'],\n    BUTTON: ['formaction'],\n    BASE: ['href'],\n    MENUITEM: ['icon'],\n    HTML: ['manifest'],\n    VIDEO: ['poster']\n  };\n  if (attrName === 'itemid') {\n    return true;\n  }\n  var urlAttrNames = urlAttrs[tagName] || [];\n  return urlAttrNames.includes(attrName);\n};\n\n// To get the protocol for a URL, we let the browser normalize it for\n// us, by setting it as the href for an anchor tag and then reading out\n// the 'protocol' property.\nif (Meteor.isClient) {\n  var anchorForNormalization = document.createElement('A');\n}\nvar getUrlProtocol = function (url) {\n  if (Meteor.isClient) {\n    anchorForNormalization.href = url;\n    return (anchorForNormalization.protocol || \"\").toLowerCase();\n  } else {\n    throw new Error('getUrlProtocol not implemented on the server');\n  }\n};\n\n// UrlHandler is an attribute handler for all HTML attributes that take\n// URL values. It disallows javascript: URLs, unless\n// Blaze._allowJavascriptUrls() has been called. To detect javascript:\n// urls, we set the attribute on a dummy anchor element and then read\n// out the 'protocol' property of the attribute.\nvar origUpdate = AttributeHandler.prototype.update;\nvar UrlHandler = AttributeHandler.extend({\n  update: function (element, oldValue, value) {\n    var self = this;\n    var args = arguments;\n    if (Blaze._javascriptUrlsAllowed()) {\n      origUpdate.apply(self, args);\n    } else {\n      var isJavascriptProtocol = getUrlProtocol(value) === \"javascript:\";\n      var isVBScriptProtocol = getUrlProtocol(value) === \"vbscript:\";\n      if (isJavascriptProtocol || isVBScriptProtocol) {\n        Blaze._warn(\"URLs that use the 'javascript:' or 'vbscript:' protocol are not \" + \"allowed in URL attribute values. \" + \"Call Blaze._allowJavascriptUrls() \" + \"to enable them.\");\n        origUpdate.apply(self, [element, oldValue, null]);\n      } else {\n        origUpdate.apply(self, args);\n      }\n    }\n  }\n});\n\n// XXX make it possible for users to register attribute handlers!\nBlaze._makeAttributeHandler = function (elem, name, value) {\n  // generally, use setAttribute but certain attributes need to be set\n  // by directly setting a JavaScript property on the DOM element.\n  if (name === 'class') {\n    if (isSVGElement(elem)) {\n      return new SVGClassHandler(name, value);\n    } else {\n      return new ClassHandler(name, value);\n    }\n  } else if (name === 'style') {\n    return new StyleHandler(name, value);\n  } else if (elem.tagName === 'OPTION' && name === 'selected' || elem.tagName === 'INPUT' && name === 'checked' || elem.tagName === 'VIDEO' && name === 'muted') {\n    return new BooleanHandler(name, value);\n  } else if ((elem.tagName === 'TEXTAREA' || elem.tagName === 'INPUT') && name === 'value') {\n    // internally, TEXTAREAs tracks their value in the 'value'\n    // attribute just like INPUTs.\n    return new DOMPropertyHandler(name, value);\n  } else if (name.substring(0, 6) === 'xlink:') {\n    return new XlinkHandler(name.substring(6), value);\n  } else if (isUrlAttribute(elem.tagName, name)) {\n    return new UrlHandler(name, value);\n  } else {\n    return new AttributeHandler(name, value);\n  }\n\n  // XXX will need one for 'style' on IE, though modern browsers\n  // seem to handle setAttribute ok.\n};\nElementAttributesUpdater = function (elem) {\n  this.elem = elem;\n  this.handlers = {};\n};\n\n// Update attributes on `elem` to the dictionary `attrs`, whose\n// values are strings.\nElementAttributesUpdater.prototype.update = function (newAttrs) {\n  var elem = this.elem;\n  var handlers = this.handlers;\n  for (var k in meteorBabelHelpers.sanitizeForInObject(handlers)) {\n    if (!has(newAttrs, k)) {\n      // remove attributes (and handlers) for attribute names\n      // that don't exist as keys of `newAttrs` and so won't\n      // be visited when traversing it.  (Attributes that\n      // exist in the `newAttrs` object but are `null`\n      // are handled later.)\n      var handler = handlers[k];\n      var oldValue = handler.value;\n      handler.value = null;\n      handler.update(elem, oldValue, null);\n      delete handlers[k];\n    }\n  }\n  for (var k in meteorBabelHelpers.sanitizeForInObject(newAttrs)) {\n    var handler = null;\n    var oldValue = null;\n    var value = newAttrs[k];\n    if (!has(handlers, k)) {\n      if (value !== null) {\n        // make new handler\n        handler = Blaze._makeAttributeHandler(elem, k, value);\n        handlers[k] = handler;\n      }\n    } else {\n      handler = handlers[k];\n      oldValue = handler.value;\n    }\n    if (oldValue !== value) {\n      handler.value = value;\n      handler.update(elem, oldValue, value);\n      if (value === null) delete handlers[k];\n    }\n  }\n};","map":{"version":3,"names":["has","module","link","default","v","jsUrlsAllowed","Blaze","_allowJavascriptUrls","_javascriptUrlsAllowed","AttributeHandler","name","value","_AttributeHandler","prototype","update","element","oldValue","removeAttribute","setAttribute","extend","options","curType","subType","AttributeHandlerSubtype","apply","arguments","Object","assign","_DiffingAttributeHandler","getCurrentValue","setValue","parseValue","joinValues","Error","oldAttrsMap","OrderedDict","attrsMap","currentAttrString","currentAttrsMap","forEach","key","i","append","values","push","ClassHandler","className","attrString","tokens","split","token","join","SVGClassHandler","baseVal","StyleHandler","getAttribute","style","regex","match","exec","remove","trim","BooleanHandler","DOMPropertyHandler","XlinkHandler","NS","removeAttributeNS","setAttributeNS","isSVGElement","elem","isUrlAttribute","tagName","attrName","urlAttrs","FORM","BODY","BLOCKQUOTE","Q","DEL","INS","OBJECT","APPLET","A","AREA","LINK","IMG","FRAME","IFRAME","HEAD","SCRIPT","INPUT","BUTTON","BASE","MENUITEM","HTML","VIDEO","urlAttrNames","includes","Meteor","isClient","anchorForNormalization","document","createElement","getUrlProtocol","url","href","protocol","toLowerCase","origUpdate","UrlHandler","self","args","isJavascriptProtocol","isVBScriptProtocol","_warn","_makeAttributeHandler","substring","ElementAttributesUpdater","handlers","newAttrs","k","meteorBabelHelpers","sanitizeForInObject","handler"],"sources":["packages/blaze/attrs.js"],"sourcesContent":["import has from 'lodash.has';\n\nvar jsUrlsAllowed = false;\nBlaze._allowJavascriptUrls = function () {\n  jsUrlsAllowed = true;\n};\nBlaze._javascriptUrlsAllowed = function () {\n  return jsUrlsAllowed;\n};\n\n// An AttributeHandler object is responsible for updating a particular attribute\n// of a particular element.  AttributeHandler subclasses implement\n// browser-specific logic for dealing with particular attributes across\n// different browsers.\n//\n// To define a new type of AttributeHandler, use\n// `var FooHandler = AttributeHandler.extend({ update: function ... })`\n// where the `update` function takes arguments `(element, oldValue, value)`.\n// The `element` argument is always the same between calls to `update` on\n// the same instance.  `oldValue` and `value` are each either `null` or\n// a Unicode string of the type that might be passed to the value argument\n// of `setAttribute` (i.e. not an HTML string with character references).\n// When an AttributeHandler is installed, an initial call to `update` is\n// always made with `oldValue = null`.  The `update` method can access\n// `this.name` if the AttributeHandler class is a generic one that applies\n// to multiple attribute names.\n//\n// AttributeHandlers can store custom properties on `this`, as long as they\n// don't use the names `element`, `name`, `value`, and `oldValue`.\n//\n// AttributeHandlers can't influence how attributes appear in rendered HTML,\n// only how they are updated after materialization as DOM.\n\nAttributeHandler = function (name, value) {\n  this.name = name;\n  this.value = value;\n};\nBlaze._AttributeHandler = AttributeHandler;\n\nAttributeHandler.prototype.update = function (element, oldValue, value) {\n  if (value === null) {\n    if (oldValue !== null)\n      element.removeAttribute(this.name);\n  } else {\n    element.setAttribute(this.name, value);\n  }\n};\n\nAttributeHandler.extend = function (options) {\n  var curType = this;\n  var subType = function AttributeHandlerSubtype(/*arguments*/) {\n    AttributeHandler.apply(this, arguments);\n  };\n  subType.prototype = new curType;\n  subType.extend = curType.extend;\n  if (options) {\n    Object.assign(subType.prototype, options);\n  }\n  return subType;\n};\n\n/// Apply the diff between the attributes of \"oldValue\" and \"value\" to \"element.\"\n//\n// Each subclass must implement a parseValue method which takes a string\n// as an input and returns an ordered dict of attributes. The keys of the dict\n// are unique identifiers (ie. css properties in the case of styles), and the\n// values are the entire attribute which will be injected into the element.\n//\n// Extended below to support classes, SVG elements and styles.\n\nBlaze._DiffingAttributeHandler = AttributeHandler.extend({\n  update: function (element, oldValue, value) {\n    if (!this.getCurrentValue || !this.setValue || !this.parseValue || !this.joinValues)\n      throw new Error(\"Missing methods in subclass of 'DiffingAttributeHandler'\");\n\n    var oldAttrsMap = oldValue ? this.parseValue(oldValue) : new OrderedDict();\n    var attrsMap = value ? this.parseValue(value) : new OrderedDict();\n\n    // the current attributes on the element, which we will mutate.\n\n    var currentAttrString = this.getCurrentValue(element);\n    var currentAttrsMap = currentAttrString ? this.parseValue(currentAttrString) : new OrderedDict();\n\n    // Any outside changes to attributes we add at the end.\n    currentAttrsMap.forEach(function (value, key, i) {\n      // If the key already exists, we do not use the current value, but the new value.\n      if (attrsMap.has(key)) {\n        return;\n      }\n\n      // Key does not already exist, but it existed before. Which means it was explicitly\n      // removed, so we do not add it.\n      if (oldAttrsMap.has(key)) {\n        return;\n      }\n\n      attrsMap.append(key, value);\n    });\n\n    var values = [];\n    attrsMap.forEach(function (value, key, i) {\n      values.push(value);\n    });\n\n    this.setValue(element, this.joinValues(values));\n  }\n});\n\nvar ClassHandler = Blaze._DiffingAttributeHandler.extend({\n  // @param rawValue {String}\n  getCurrentValue: function (element) {\n    return element.className;\n  },\n  setValue: function (element, className) {\n    element.className = className;\n  },\n  parseValue: function (attrString) {\n    var tokens = new OrderedDict();\n\n    attrString.split(' ').forEach(function (token) {\n      if (token) {\n        // Ordered dict requires unique keys.\n        if (! tokens.has(token)) {\n          tokens.append(token, token);\n        }\n      }\n    });\n    return tokens;\n  },\n  joinValues: function (values) {\n    return values.join(' ');\n  }\n});\n\nvar SVGClassHandler = ClassHandler.extend({\n  getCurrentValue: function (element) {\n    return element.className.baseVal;\n  },\n  setValue: function (element, className) {\n    element.setAttribute('class', className);\n  }\n});\n\nvar StyleHandler = Blaze._DiffingAttributeHandler.extend({\n  getCurrentValue: function (element) {\n    return element.getAttribute('style');\n  },\n  setValue: function (element, style) {\n    if (style === '') {\n      element.removeAttribute('style');\n    } else {\n      element.setAttribute('style', style);\n    }\n  },\n\n  // Parse a string to produce a map from property to attribute string.\n  //\n  // Example:\n  // \"color:red; foo:12px\" produces a token {color: \"color:red\", foo:\"foo:12px\"}\n  parseValue: function (attrString) {\n    var tokens = new OrderedDict();\n\n    // Regex for parsing a css attribute declaration, taken from css-parse:\n    // https://github.com/reworkcss/css-parse/blob/7cef3658d0bba872cde05a85339034b187cb3397/index.js#L219\n    var regex = /(\\*?[-#\\/\\*\\\\\\w]+(?:\\[[0-9a-z_-]+\\])?)\\s*:\\s*(?:\\'(?:\\\\\\'|.)*?\\'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+[;\\s]*/g;\n    var match = regex.exec(attrString);\n    while (match) {\n      // match[0] = entire matching string\n      // match[1] = css property\n      // Prefix the token to prevent conflicts with existing properties.\n\n      // We use the last value for the same key.\n      if (tokens.has(match[1])) {\n        tokens.remove(match[1]);\n      }\n\n      tokens.append(match[1], match[0].trim());\n\n      match = regex.exec(attrString);\n    }\n\n    return tokens;\n  },\n\n  joinValues: function (values) {\n    // TODO: Assure that there is always ; between values. But what is an example where it breaks?\n    return values.join(' ');\n  }\n});\n\nvar BooleanHandler = AttributeHandler.extend({\n  update: function (element, oldValue, value) {\n    var name = this.name;\n    if (value == null) {\n      if (oldValue != null)\n        element[name] = false;\n    } else {\n      element[name] = true;\n    }\n  }\n});\n\nvar DOMPropertyHandler = AttributeHandler.extend({\n  update: function (element, oldValue, value) {\n    var name = this.name;\n    if (value !== element[name])\n      element[name] = value;\n  }\n});\n\n// attributes of the type 'xlink:something' should be set using\n// the correct namespace in order to work\nvar XlinkHandler = AttributeHandler.extend({\n  update: function(element, oldValue, value) {\n    var NS = 'http://www.w3.org/1999/xlink';\n    if (value === null) {\n      if (oldValue !== null)\n        element.removeAttributeNS(NS, this.name);\n    } else {\n      element.setAttributeNS(NS, this.name, this.value);\n    }\n  }\n});\n\n// cross-browser version of `instanceof SVGElement`\nvar isSVGElement = function (elem) {\n  return 'ownerSVGElement' in elem;\n};\n\nvar isUrlAttribute = function (tagName, attrName) {\n  // Compiled from http://www.w3.org/TR/REC-html40/index/attributes.html\n  // and\n  // http://www.w3.org/html/wg/drafts/html/master/index.html#attributes-1\n  var urlAttrs = {\n    FORM: ['action'],\n    BODY: ['background'],\n    BLOCKQUOTE: ['cite'],\n    Q: ['cite'],\n    DEL: ['cite'],\n    INS: ['cite'],\n    OBJECT: ['classid', 'codebase', 'data', 'usemap'],\n    APPLET: ['codebase'],\n    A: ['href'],\n    AREA: ['href'],\n    LINK: ['href'],\n    IMG: ['longdesc', 'src', 'usemap'],\n    FRAME: ['longdesc', 'src'],\n    IFRAME: ['longdesc', 'src'],\n    HEAD: ['profile'],\n    SCRIPT: ['src'],\n    INPUT: ['src', 'usemap', 'formaction'],\n    BUTTON: ['formaction'],\n    BASE: ['href'],\n    MENUITEM: ['icon'],\n    HTML: ['manifest'],\n    VIDEO: ['poster']\n  };\n\n  if (attrName === 'itemid') {\n    return true;\n  }\n\n  var urlAttrNames = urlAttrs[tagName] || [];\n  return urlAttrNames.includes(attrName);\n};\n\n// To get the protocol for a URL, we let the browser normalize it for\n// us, by setting it as the href for an anchor tag and then reading out\n// the 'protocol' property.\nif (Meteor.isClient) {\n  var anchorForNormalization = document.createElement('A');\n}\n\nvar getUrlProtocol = function (url) {\n  if (Meteor.isClient) {\n    anchorForNormalization.href = url;\n    return (anchorForNormalization.protocol || \"\").toLowerCase();\n  } else {\n    throw new Error('getUrlProtocol not implemented on the server');\n  }\n};\n\n// UrlHandler is an attribute handler for all HTML attributes that take\n// URL values. It disallows javascript: URLs, unless\n// Blaze._allowJavascriptUrls() has been called. To detect javascript:\n// urls, we set the attribute on a dummy anchor element and then read\n// out the 'protocol' property of the attribute.\nvar origUpdate = AttributeHandler.prototype.update;\nvar UrlHandler = AttributeHandler.extend({\n  update: function (element, oldValue, value) {\n    var self = this;\n    var args = arguments;\n\n    if (Blaze._javascriptUrlsAllowed()) {\n      origUpdate.apply(self, args);\n    } else {\n      var isJavascriptProtocol = (getUrlProtocol(value) === \"javascript:\");\n      var isVBScriptProtocol   = (getUrlProtocol(value) === \"vbscript:\");\n      if (isJavascriptProtocol || isVBScriptProtocol) {\n        Blaze._warn(\"URLs that use the 'javascript:' or 'vbscript:' protocol are not \" +\n        \"allowed in URL attribute values. \" +\n        \"Call Blaze._allowJavascriptUrls() \" +\n        \"to enable them.\");\n        origUpdate.apply(self, [element, oldValue, null]);\n      } else {\n        origUpdate.apply(self, args);\n      }\n    }\n  }\n});\n\n// XXX make it possible for users to register attribute handlers!\nBlaze._makeAttributeHandler = function (elem, name, value) {\n  // generally, use setAttribute but certain attributes need to be set\n  // by directly setting a JavaScript property on the DOM element.\n  if (name === 'class') {\n    if (isSVGElement(elem)) {\n      return new SVGClassHandler(name, value);\n    } else {\n      return new ClassHandler(name, value);\n    }\n  } else if (name === 'style') {\n    return new StyleHandler(name, value);\n  } else if ((elem.tagName === 'OPTION' && name === 'selected') ||\n  (elem.tagName === 'INPUT' && name === 'checked') ||\n  (elem.tagName === 'VIDEO' && name === 'muted')) {\n    return new BooleanHandler(name, value);\n  } else if ((elem.tagName === 'TEXTAREA' || elem.tagName === 'INPUT')\n  && name === 'value') {\n    // internally, TEXTAREAs tracks their value in the 'value'\n    // attribute just like INPUTs.\n    return new DOMPropertyHandler(name, value);\n  } else if (name.substring(0,6) === 'xlink:') {\n    return new XlinkHandler(name.substring(6), value);\n  } else if (isUrlAttribute(elem.tagName, name)) {\n    return new UrlHandler(name, value);\n  } else {\n    return new AttributeHandler(name, value);\n  }\n\n  // XXX will need one for 'style' on IE, though modern browsers\n  // seem to handle setAttribute ok.\n};\n\nElementAttributesUpdater = function (elem) {\n  this.elem = elem;\n  this.handlers = {};\n};\n\n// Update attributes on `elem` to the dictionary `attrs`, whose\n// values are strings.\nElementAttributesUpdater.prototype.update = function(newAttrs) {\n  var elem = this.elem;\n  var handlers = this.handlers;\n\n  for (var k in handlers) {\n    if (!has(newAttrs, k)) {\n      // remove attributes (and handlers) for attribute names\n      // that don't exist as keys of `newAttrs` and so won't\n      // be visited when traversing it.  (Attributes that\n      // exist in the `newAttrs` object but are `null`\n      // are handled later.)\n      var handler = handlers[k];\n      var oldValue = handler.value;\n      handler.value = null;\n      handler.update(elem, oldValue, null);\n      delete handlers[k];\n    }\n  }\n\n  for (var k in newAttrs) {\n    var handler = null;\n    var oldValue = null;\n    var value = newAttrs[k];\n    if (!has(handlers, k)) {\n      if (value !== null) {\n        // make new handler\n        handler = Blaze._makeAttributeHandler(elem, k, value);\n        handlers[k] = handler;\n      }\n    } else {\n      handler = handlers[k];\n      oldValue = handler.value;\n    }\n    if (oldValue !== value) {\n      handler.value = value;\n      handler.update(elem, oldValue, value);\n      if (value === null)\n        delete handlers[k];\n    }\n  }\n};\n"],"mappings":"AAAA,IAAIA,GAAG;AAACC,MAAM,CAACC,IAAI,CAAC,YAAY,EAAC;EAAC,WAAQ,SAAAC,CAASC,CAAC,EAAC;IAACJ,GAAG,GAACI,CAAC;EAAA;AAAC,CAAC,EAAC,CAAC,CAAC;AAEhE,IAAIC,aAAa,GAAG,KAAK;AACzBC,KAAK,CAACC,oBAAoB,GAAG,YAAY;EACvCF,aAAa,GAAG,IAAI;AACtB,CAAC;AACDC,KAAK,CAACE,sBAAsB,GAAG,YAAY;EACzC,OAAOH,aAAa;AACtB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAI,gBAAgB,GAAG,SAAAA,CAAUC,IAAI,EAAEC,KAAK,EAAE;EACxC,IAAI,CAACD,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACC,KAAK,GAAGA,KAAK;AACpB,CAAC;AACDL,KAAK,CAACM,iBAAiB,GAAGH,gBAAgB;AAE1CA,gBAAgB,CAACI,SAAS,CAACC,MAAM,GAAG,UAAUC,OAAO,EAAEC,QAAQ,EAAEL,KAAK,EAAE;EACtE,IAAIA,KAAK,KAAK,IAAI,EAAE;IAClB,IAAIK,QAAQ,KAAK,IAAI,EACnBD,OAAO,CAACE,eAAe,CAAC,IAAI,CAACP,IAAI,CAAC;EACtC,CAAC,MAAM;IACLK,OAAO,CAACG,YAAY,CAAC,IAAI,CAACR,IAAI,EAAEC,KAAK,CAAC;EACxC;AACF,CAAC;AAEDF,gBAAgB,CAACU,MAAM,GAAG,UAAUC,OAAO,EAAE;EAC3C,IAAIC,OAAO,GAAG,IAAI;EAClB,IAAIC,OAAO;IAAG,SAASC,uBAAuBA,CAAA,EAAgB;MAC5Dd,gBAAgB,CAACe,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IACzC;IAAC,OAFsBF,uBAAuB;EAAA;IAAC;EAAA,CAE9C;EACDD,OAAO,CAACT,SAAS,GAAG,IAAIQ,OAAO,CAAD,CAAC;EAC/BC,OAAO,CAACH,MAAM,GAAGE,OAAO,CAACF,MAAM;EAC/B,IAAIC,OAAO,EAAE;IACXM,MAAM,CAACC,MAAM,CAACL,OAAO,CAACT,SAAS,EAAEO,OAAO,CAAC;EAC3C;EACA,OAAOE,OAAO;AAChB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAhB,KAAK,CAACsB,wBAAwB,GAAGnB,gBAAgB,CAACU,MAAM,CAAC;EACvDL,MAAM,EAAE,SAAAA,CAAUC,OAAO,EAAEC,QAAQ,EAAEL,KAAK,EAAE;IAC1C,IAAI,CAAC,IAAI,CAACkB,eAAe,IAAI,CAAC,IAAI,CAACC,QAAQ,IAAI,CAAC,IAAI,CAACC,UAAU,IAAI,CAAC,IAAI,CAACC,UAAU,EACjF,MAAM,IAAIC,KAAK,CAAC,0DAA0D,CAAC;IAE7E,IAAIC,WAAW,GAAGlB,QAAQ,GAAG,IAAI,CAACe,UAAU,CAACf,QAAQ,CAAC,GAAG,IAAImB,WAAW,CAAC,CAAC;IAC1E,IAAIC,QAAQ,GAAGzB,KAAK,GAAG,IAAI,CAACoB,UAAU,CAACpB,KAAK,CAAC,GAAG,IAAIwB,WAAW,CAAC,CAAC;;IAEjE;;IAEA,IAAIE,iBAAiB,GAAG,IAAI,CAACR,eAAe,CAACd,OAAO,CAAC;IACrD,IAAIuB,eAAe,GAAGD,iBAAiB,GAAG,IAAI,CAACN,UAAU,CAACM,iBAAiB,CAAC,GAAG,IAAIF,WAAW,CAAC,CAAC;;IAEhG;IACAG,eAAe,CAACC,OAAO,CAAC,UAAU5B,KAAK,EAAE6B,GAAG,EAAEC,CAAC,EAAE;MAC/C;MACA,IAAIL,QAAQ,CAACpC,GAAG,CAACwC,GAAG,CAAC,EAAE;QACrB;MACF;;MAEA;MACA;MACA,IAAIN,WAAW,CAAClC,GAAG,CAACwC,GAAG,CAAC,EAAE;QACxB;MACF;MAEAJ,QAAQ,CAACM,MAAM,CAACF,GAAG,EAAE7B,KAAK,CAAC;IAC7B,CAAC,CAAC;IAEF,IAAIgC,MAAM,GAAG,EAAE;IACfP,QAAQ,CAACG,OAAO,CAAC,UAAU5B,KAAK,EAAE6B,GAAG,EAAEC,CAAC,EAAE;MACxCE,MAAM,CAACC,IAAI,CAACjC,KAAK,CAAC;IACpB,CAAC,CAAC;IAEF,IAAI,CAACmB,QAAQ,CAACf,OAAO,EAAE,IAAI,CAACiB,UAAU,CAACW,MAAM,CAAC,CAAC;EACjD;AACF,CAAC,CAAC;AAEF,IAAIE,YAAY,GAAGvC,KAAK,CAACsB,wBAAwB,CAACT,MAAM,CAAC;EACvD;EACAU,eAAe,EAAE,SAAAA,CAAUd,OAAO,EAAE;IAClC,OAAOA,OAAO,CAAC+B,SAAS;EAC1B,CAAC;EACDhB,QAAQ,EAAE,SAAAA,CAAUf,OAAO,EAAE+B,SAAS,EAAE;IACtC/B,OAAO,CAAC+B,SAAS,GAAGA,SAAS;EAC/B,CAAC;EACDf,UAAU,EAAE,SAAAA,CAAUgB,UAAU,EAAE;IAChC,IAAIC,MAAM,GAAG,IAAIb,WAAW,CAAC,CAAC;IAE9BY,UAAU,CAACE,KAAK,CAAC,GAAG,CAAC,CAACV,OAAO,CAAC,UAAUW,KAAK,EAAE;MAC7C,IAAIA,KAAK,EAAE;QACT;QACA,IAAI,CAAEF,MAAM,CAAChD,GAAG,CAACkD,KAAK,CAAC,EAAE;UACvBF,MAAM,CAACN,MAAM,CAACQ,KAAK,EAAEA,KAAK,CAAC;QAC7B;MACF;IACF,CAAC,CAAC;IACF,OAAOF,MAAM;EACf,CAAC;EACDhB,UAAU,EAAE,SAAAA,CAAUW,MAAM,EAAE;IAC5B,OAAOA,MAAM,CAACQ,IAAI,CAAC,GAAG,CAAC;EACzB;AACF,CAAC,CAAC;AAEF,IAAIC,eAAe,GAAGP,YAAY,CAAC1B,MAAM,CAAC;EACxCU,eAAe,EAAE,SAAAA,CAAUd,OAAO,EAAE;IAClC,OAAOA,OAAO,CAAC+B,SAAS,CAACO,OAAO;EAClC,CAAC;EACDvB,QAAQ,EAAE,SAAAA,CAAUf,OAAO,EAAE+B,SAAS,EAAE;IACtC/B,OAAO,CAACG,YAAY,CAAC,OAAO,EAAE4B,SAAS,CAAC;EAC1C;AACF,CAAC,CAAC;AAEF,IAAIQ,YAAY,GAAGhD,KAAK,CAACsB,wBAAwB,CAACT,MAAM,CAAC;EACvDU,eAAe,EAAE,SAAAA,CAAUd,OAAO,EAAE;IAClC,OAAOA,OAAO,CAACwC,YAAY,CAAC,OAAO,CAAC;EACtC,CAAC;EACDzB,QAAQ,EAAE,SAAAA,CAAUf,OAAO,EAAEyC,KAAK,EAAE;IAClC,IAAIA,KAAK,KAAK,EAAE,EAAE;MAChBzC,OAAO,CAACE,eAAe,CAAC,OAAO,CAAC;IAClC,CAAC,MAAM;MACLF,OAAO,CAACG,YAAY,CAAC,OAAO,EAAEsC,KAAK,CAAC;IACtC;EACF,CAAC;EAED;EACA;EACA;EACA;EACAzB,UAAU,EAAE,SAAAA,CAAUgB,UAAU,EAAE;IAChC,IAAIC,MAAM,GAAG,IAAIb,WAAW,CAAC,CAAC;;IAE9B;IACA;IACA,IAAIsB,KAAK,GAAG,2GAA2G;IACvH,IAAIC,KAAK,GAAGD,KAAK,CAACE,IAAI,CAACZ,UAAU,CAAC;IAClC,OAAOW,KAAK,EAAE;MACZ;MACA;MACA;;MAEA;MACA,IAAIV,MAAM,CAAChD,GAAG,CAAC0D,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;QACxBV,MAAM,CAACY,MAAM,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;MACzB;MAEAV,MAAM,CAACN,MAAM,CAACgB,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAACG,IAAI,CAAC,CAAC,CAAC;MAExCH,KAAK,GAAGD,KAAK,CAACE,IAAI,CAACZ,UAAU,CAAC;IAChC;IAEA,OAAOC,MAAM;EACf,CAAC;EAEDhB,UAAU,EAAE,SAAAA,CAAUW,MAAM,EAAE;IAC5B;IACA,OAAOA,MAAM,CAACQ,IAAI,CAAC,GAAG,CAAC;EACzB;AACF,CAAC,CAAC;AAEF,IAAIW,cAAc,GAAGrD,gBAAgB,CAACU,MAAM,CAAC;EAC3CL,MAAM,EAAE,SAAAA,CAAUC,OAAO,EAAEC,QAAQ,EAAEL,KAAK,EAAE;IAC1C,IAAID,IAAI,GAAG,IAAI,CAACA,IAAI;IACpB,IAAIC,KAAK,IAAI,IAAI,EAAE;MACjB,IAAIK,QAAQ,IAAI,IAAI,EAClBD,OAAO,CAACL,IAAI,CAAC,GAAG,KAAK;IACzB,CAAC,MAAM;MACLK,OAAO,CAACL,IAAI,CAAC,GAAG,IAAI;IACtB;EACF;AACF,CAAC,CAAC;AAEF,IAAIqD,kBAAkB,GAAGtD,gBAAgB,CAACU,MAAM,CAAC;EAC/CL,MAAM,EAAE,SAAAA,CAAUC,OAAO,EAAEC,QAAQ,EAAEL,KAAK,EAAE;IAC1C,IAAID,IAAI,GAAG,IAAI,CAACA,IAAI;IACpB,IAAIC,KAAK,KAAKI,OAAO,CAACL,IAAI,CAAC,EACzBK,OAAO,CAACL,IAAI,CAAC,GAAGC,KAAK;EACzB;AACF,CAAC,CAAC;;AAEF;AACA;AACA,IAAIqD,YAAY,GAAGvD,gBAAgB,CAACU,MAAM,CAAC;EACzCL,MAAM,EAAE,SAAAA,CAASC,OAAO,EAAEC,QAAQ,EAAEL,KAAK,EAAE;IACzC,IAAIsD,EAAE,GAAG,8BAA8B;IACvC,IAAItD,KAAK,KAAK,IAAI,EAAE;MAClB,IAAIK,QAAQ,KAAK,IAAI,EACnBD,OAAO,CAACmD,iBAAiB,CAACD,EAAE,EAAE,IAAI,CAACvD,IAAI,CAAC;IAC5C,CAAC,MAAM;MACLK,OAAO,CAACoD,cAAc,CAACF,EAAE,EAAE,IAAI,CAACvD,IAAI,EAAE,IAAI,CAACC,KAAK,CAAC;IACnD;EACF;AACF,CAAC,CAAC;;AAEF;AACA,IAAIyD,YAAY,GAAG,SAAAA,CAAUC,IAAI,EAAE;EACjC,OAAO,iBAAiB,IAAIA,IAAI;AAClC,CAAC;AAED,IAAIC,cAAc,GAAG,SAAAA,CAAUC,OAAO,EAAEC,QAAQ,EAAE;EAChD;EACA;EACA;EACA,IAAIC,QAAQ,GAAG;IACbC,IAAI,EAAE,CAAC,QAAQ,CAAC;IAChBC,IAAI,EAAE,CAAC,YAAY,CAAC;IACpBC,UAAU,EAAE,CAAC,MAAM,CAAC;IACpBC,CAAC,EAAE,CAAC,MAAM,CAAC;IACXC,GAAG,EAAE,CAAC,MAAM,CAAC;IACbC,GAAG,EAAE,CAAC,MAAM,CAAC;IACbC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,CAAC;IACjDC,MAAM,EAAE,CAAC,UAAU,CAAC;IACpBC,CAAC,EAAE,CAAC,MAAM,CAAC;IACXC,IAAI,EAAE,CAAC,MAAM,CAAC;IACdC,IAAI,EAAE,CAAC,MAAM,CAAC;IACdC,GAAG,EAAE,CAAC,UAAU,EAAE,KAAK,EAAE,QAAQ,CAAC;IAClCC,KAAK,EAAE,CAAC,UAAU,EAAE,KAAK,CAAC;IAC1BC,MAAM,EAAE,CAAC,UAAU,EAAE,KAAK,CAAC;IAC3BC,IAAI,EAAE,CAAC,SAAS,CAAC;IACjBC,MAAM,EAAE,CAAC,KAAK,CAAC;IACfC,KAAK,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,YAAY,CAAC;IACtCC,MAAM,EAAE,CAAC,YAAY,CAAC;IACtBC,IAAI,EAAE,CAAC,MAAM,CAAC;IACdC,QAAQ,EAAE,CAAC,MAAM,CAAC;IAClBC,IAAI,EAAE,CAAC,UAAU,CAAC;IAClBC,KAAK,EAAE,CAAC,QAAQ;EAClB,CAAC;EAED,IAAIvB,QAAQ,KAAK,QAAQ,EAAE;IACzB,OAAO,IAAI;EACb;EAEA,IAAIwB,YAAY,GAAGvB,QAAQ,CAACF,OAAO,CAAC,IAAI,EAAE;EAC1C,OAAOyB,YAAY,CAACC,QAAQ,CAACzB,QAAQ,CAAC;AACxC,CAAC;;AAED;AACA;AACA;AACA,IAAI0B,MAAM,CAACC,QAAQ,EAAE;EACnB,IAAIC,sBAAsB,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;AAC1D;AAEA,IAAIC,cAAc,GAAG,SAAAA,CAAUC,GAAG,EAAE;EAClC,IAAIN,MAAM,CAACC,QAAQ,EAAE;IACnBC,sBAAsB,CAACK,IAAI,GAAGD,GAAG;IACjC,OAAO,CAACJ,sBAAsB,CAACM,QAAQ,IAAI,EAAE,EAAEC,WAAW,CAAC,CAAC;EAC9D,CAAC,MAAM;IACL,MAAM,IAAI1E,KAAK,CAAC,8CAA8C,CAAC;EACjE;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,IAAI2E,UAAU,GAAGnG,gBAAgB,CAACI,SAAS,CAACC,MAAM;AAClD,IAAI+F,UAAU,GAAGpG,gBAAgB,CAACU,MAAM,CAAC;EACvCL,MAAM,EAAE,SAAAA,CAAUC,OAAO,EAAEC,QAAQ,EAAEL,KAAK,EAAE;IAC1C,IAAImG,IAAI,GAAG,IAAI;IACf,IAAIC,IAAI,GAAGtF,SAAS;IAEpB,IAAInB,KAAK,CAACE,sBAAsB,CAAC,CAAC,EAAE;MAClCoG,UAAU,CAACpF,KAAK,CAACsF,IAAI,EAAEC,IAAI,CAAC;IAC9B,CAAC,MAAM;MACL,IAAIC,oBAAoB,GAAIT,cAAc,CAAC5F,KAAK,CAAC,KAAK,aAAc;MACpE,IAAIsG,kBAAkB,GAAMV,cAAc,CAAC5F,KAAK,CAAC,KAAK,WAAY;MAClE,IAAIqG,oBAAoB,IAAIC,kBAAkB,EAAE;QAC9C3G,KAAK,CAAC4G,KAAK,CAAC,kEAAkE,GAC9E,mCAAmC,GACnC,oCAAoC,GACpC,iBAAiB,CAAC;QAClBN,UAAU,CAACpF,KAAK,CAACsF,IAAI,EAAE,CAAC/F,OAAO,EAAEC,QAAQ,EAAE,IAAI,CAAC,CAAC;MACnD,CAAC,MAAM;QACL4F,UAAU,CAACpF,KAAK,CAACsF,IAAI,EAAEC,IAAI,CAAC;MAC9B;IACF;EACF;AACF,CAAC,CAAC;;AAEF;AACAzG,KAAK,CAAC6G,qBAAqB,GAAG,UAAU9C,IAAI,EAAE3D,IAAI,EAAEC,KAAK,EAAE;EACzD;EACA;EACA,IAAID,IAAI,KAAK,OAAO,EAAE;IACpB,IAAI0D,YAAY,CAACC,IAAI,CAAC,EAAE;MACtB,OAAO,IAAIjB,eAAe,CAAC1C,IAAI,EAAEC,KAAK,CAAC;IACzC,CAAC,MAAM;MACL,OAAO,IAAIkC,YAAY,CAACnC,IAAI,EAAEC,KAAK,CAAC;IACtC;EACF,CAAC,MAAM,IAAID,IAAI,KAAK,OAAO,EAAE;IAC3B,OAAO,IAAI4C,YAAY,CAAC5C,IAAI,EAAEC,KAAK,CAAC;EACtC,CAAC,MAAM,IAAK0D,IAAI,CAACE,OAAO,KAAK,QAAQ,IAAI7D,IAAI,KAAK,UAAU,IAC3D2D,IAAI,CAACE,OAAO,KAAK,OAAO,IAAI7D,IAAI,KAAK,SAAU,IAC/C2D,IAAI,CAACE,OAAO,KAAK,OAAO,IAAI7D,IAAI,KAAK,OAAQ,EAAE;IAC9C,OAAO,IAAIoD,cAAc,CAACpD,IAAI,EAAEC,KAAK,CAAC;EACxC,CAAC,MAAM,IAAI,CAAC0D,IAAI,CAACE,OAAO,KAAK,UAAU,IAAIF,IAAI,CAACE,OAAO,KAAK,OAAO,KAChE7D,IAAI,KAAK,OAAO,EAAE;IACnB;IACA;IACA,OAAO,IAAIqD,kBAAkB,CAACrD,IAAI,EAAEC,KAAK,CAAC;EAC5C,CAAC,MAAM,IAAID,IAAI,CAAC0G,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;IAC3C,OAAO,IAAIpD,YAAY,CAACtD,IAAI,CAAC0G,SAAS,CAAC,CAAC,CAAC,EAAEzG,KAAK,CAAC;EACnD,CAAC,MAAM,IAAI2D,cAAc,CAACD,IAAI,CAACE,OAAO,EAAE7D,IAAI,CAAC,EAAE;IAC7C,OAAO,IAAImG,UAAU,CAACnG,IAAI,EAAEC,KAAK,CAAC;EACpC,CAAC,MAAM;IACL,OAAO,IAAIF,gBAAgB,CAACC,IAAI,EAAEC,KAAK,CAAC;EAC1C;;EAEA;EACA;AACF,CAAC;AAED0G,wBAAwB,GAAG,SAAAA,CAAUhD,IAAI,EAAE;EACzC,IAAI,CAACA,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACiD,QAAQ,GAAG,CAAC,CAAC;AACpB,CAAC;;AAED;AACA;AACAD,wBAAwB,CAACxG,SAAS,CAACC,MAAM,GAAG,UAASyG,QAAQ,EAAE;EAC7D,IAAIlD,IAAI,GAAG,IAAI,CAACA,IAAI;EACpB,IAAIiD,QAAQ,GAAG,IAAI,CAACA,QAAQ;EAE5B,KAAK,IAAIE,CAAC,IAAAC,kBAAA,CAAAC,mBAAA,CAAIJ,QAAQ,GAAE;IACtB,IAAI,CAACtH,GAAG,CAACuH,QAAQ,EAAEC,CAAC,CAAC,EAAE;MACrB;MACA;MACA;MACA;MACA;MACA,IAAIG,OAAO,GAAGL,QAAQ,CAACE,CAAC,CAAC;MACzB,IAAIxG,QAAQ,GAAG2G,OAAO,CAAChH,KAAK;MAC5BgH,OAAO,CAAChH,KAAK,GAAG,IAAI;MACpBgH,OAAO,CAAC7G,MAAM,CAACuD,IAAI,EAAErD,QAAQ,EAAE,IAAI,CAAC;MACpC,OAAOsG,QAAQ,CAACE,CAAC,CAAC;IACpB;EACF;EAEA,KAAK,IAAIA,CAAC,IAAAC,kBAAA,CAAAC,mBAAA,CAAIH,QAAQ,GAAE;IACtB,IAAII,OAAO,GAAG,IAAI;IAClB,IAAI3G,QAAQ,GAAG,IAAI;IACnB,IAAIL,KAAK,GAAG4G,QAAQ,CAACC,CAAC,CAAC;IACvB,IAAI,CAACxH,GAAG,CAACsH,QAAQ,EAAEE,CAAC,CAAC,EAAE;MACrB,IAAI7G,KAAK,KAAK,IAAI,EAAE;QAClB;QACAgH,OAAO,GAAGrH,KAAK,CAAC6G,qBAAqB,CAAC9C,IAAI,EAAEmD,CAAC,EAAE7G,KAAK,CAAC;QACrD2G,QAAQ,CAACE,CAAC,CAAC,GAAGG,OAAO;MACvB;IACF,CAAC,MAAM;MACLA,OAAO,GAAGL,QAAQ,CAACE,CAAC,CAAC;MACrBxG,QAAQ,GAAG2G,OAAO,CAAChH,KAAK;IAC1B;IACA,IAAIK,QAAQ,KAAKL,KAAK,EAAE;MACtBgH,OAAO,CAAChH,KAAK,GAAGA,KAAK;MACrBgH,OAAO,CAAC7G,MAAM,CAACuD,IAAI,EAAErD,QAAQ,EAAEL,KAAK,CAAC;MACrC,IAAIA,KAAK,KAAK,IAAI,EAChB,OAAO2G,QAAQ,CAACE,CAAC,CAAC;IACtB;EACF;AACF,CAAC"},"sourceType":"module","externalDependencies":{},"hash":"6614dbbc7509dd8a0669ea49ace4dbd5b7d0edb1"}
