{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"D:\\mergerware\\loan-management-app\\packages\\accounts-ui-unstyled\\login_buttons.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/accounts-ui-unstyled/login_buttons.js","filename":"D:\\mergerware\\loan-management-app\\packages\\accounts-ui-unstyled\\login_buttons.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"D:\\mergerware\\loan-management-app","root":"D:\\mergerware\\loan-management-app","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"D:\\mergerware\\loan-management-app\\packages\\accounts-ui-unstyled\\login_buttons.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/accounts-ui-unstyled/login_buttons.js"}},"code":"module.export({\n  displayName: () => displayName,\n  getLoginServices: () => getLoginServices,\n  hasPasswordService: () => hasPasswordService,\n  hasPasswordlessService: () => hasPasswordlessService,\n  dropdown: () => dropdown,\n  validateUsername: () => validateUsername,\n  validateEmail: () => validateEmail,\n  validatePassword: () => validatePassword\n});\nlet passwordSignupFields;\nmodule.link(\"./accounts_ui.js\", {\n  passwordSignupFields(v) {\n    passwordSignupFields = v;\n  }\n}, 0);\n// for convenience\nconst loginButtonsSession = Accounts._loginButtonsSession;\n\n// shared between dropdown and single mode\nTemplate.loginButtons.events({\n  'click #login-buttons-logout': () => Meteor.logout(() => loginButtonsSession.closeDropdown())\n});\nTemplate.registerHelper('loginButtons', () => {\n  throw new Error(\"Use {{> loginButtons}} instead of {{loginButtons}}\");\n});\n\n//\n// helpers\n//\n\nconst displayName = () => {\n  const user = Meteor.user();\n  if (!user) return '';\n  if (user.profile && user.profile.name) return user.profile.name;\n  if (user.username) return user.username;\n  if (user.emails && user.emails[0] && user.emails[0].address) return user.emails[0].address;\n  return '';\n};\nconst getLoginServices = () => {\n  // First look for OAuth services.\n  const services = Package['accounts-oauth'] ? Accounts.oauth.serviceNames() : [];\n\n  // Be equally kind to all login services. This also preserves\n  // backwards-compatibility. (But maybe order should be\n  // configurable?)\n  services.sort();\n\n  // Add password, if it's there; it must come last.\n  if (hasPasswordService()) services.push('password');\n  if (hasPasswordlessService()) services.push('passwordless');\n  return services.map(name => ({\n    name\n  }));\n};\nconst hasPasswordService = () => !!Package['accounts-password'];\nconst hasPasswordlessService = () => !!Package['accounts-passwordless'];\nconst dropdown = () => hasPasswordService() || hasPasswordlessService() || getLoginServices().length > 1;\nconst validateUsername = username => {\n  if (username.length >= 3) {\n    return true;\n  } else {\n    loginButtonsSession.errorMessage(\"Username must be at least 3 characters long\");\n    return false;\n  }\n};\nconst validateEmail = email => {\n  if (passwordSignupFields() === \"USERNAME_AND_OPTIONAL_EMAIL\" && email === '') return true;\n  if (email.includes('@')) {\n    return true;\n  } else {\n    loginButtonsSession.errorMessage(\"Invalid email\");\n    return false;\n  }\n};\nconst validatePassword = password => {\n  if (password.length >= 6) {\n    return true;\n  } else {\n    loginButtonsSession.errorMessage(\"Password must be at least 6 characters long\");\n    return false;\n  }\n};\n//\n// loginButtonLoggedOut template\n//\n\nTemplate._loginButtonsLoggedOut.helpers({\n  dropdown,\n  services: getLoginServices,\n  singleService: () => {\n    const services = getLoginServices();\n    if (services.length !== 1) throw new Error(\"Shouldn't be rendering this template with more than one configured service\");\n    return services[0];\n  },\n  configurationLoaded: () => Accounts.loginServicesConfigured()\n});\n\n//\n// loginButtonsLoggedIn template\n//\n\n// decide whether we should show a dropdown rather than a row of\n// buttons\nTemplate._loginButtonsLoggedIn.helpers({\n  dropdown\n});\n\n//\n// loginButtonsLoggedInSingleLogoutButton template\n//\n\nTemplate._loginButtonsLoggedInSingleLogoutButton.helpers({\n  displayName\n});\n\n//\n// loginButtonsMessage template\n//\n\nTemplate._loginButtonsMessages.helpers({\n  errorMessage: () => loginButtonsSession.get('errorMessage')\n});\nTemplate._loginButtonsMessages.helpers({\n  infoMessage: () => loginButtonsSession.get('infoMessage')\n});\n\n//\n// loginButtonsLoggingInPadding template\n//\n\nTemplate._loginButtonsLoggingInPadding.helpers({\n  dropdown\n});","map":{"version":3,"names":["module","export","displayName","getLoginServices","hasPasswordService","hasPasswordlessService","dropdown","validateUsername","validateEmail","validatePassword","passwordSignupFields","link","v","loginButtonsSession","Accounts","_loginButtonsSession","Template","loginButtons","events","click #login-buttons-logout","Meteor","logout","closeDropdown","registerHelper","Error","user","profile","name","username","emails","address","services","Package","oauth","serviceNames","sort","push","map","length","errorMessage","email","includes","password","_loginButtonsLoggedOut","helpers","singleService","configurationLoaded","loginServicesConfigured","_loginButtonsLoggedIn","_loginButtonsLoggedInSingleLogoutButton","_loginButtonsMessages","get","infoMessage","_loginButtonsLoggingInPadding"],"sources":["packages/accounts-ui-unstyled/login_buttons.js"],"sourcesContent":["import { passwordSignupFields } from './accounts_ui.js';\n\n// for convenience\nconst loginButtonsSession = Accounts._loginButtonsSession;\n\n// shared between dropdown and single mode\nTemplate.loginButtons.events({\n  'click #login-buttons-logout': () =>\n    Meteor.logout(() => loginButtonsSession.closeDropdown()),\n});\n\nTemplate.registerHelper('loginButtons', () => {\n  throw new Error(\"Use {{> loginButtons}} instead of {{loginButtons}}\");\n});\n\n//\n// helpers\n//\n\nexport const displayName = () => {\n  const user = Meteor.user();\n  if (!user)\n    return '';\n\n  if (user.profile && user.profile.name)\n    return user.profile.name;\n  if (user.username)\n    return user.username;\n  if (user.emails && user.emails[0] && user.emails[0].address)\n    return user.emails[0].address;\n\n  return '';\n};\n\n// returns an array of the login services used by this app. each\n// element of the array is an object (eg {name: 'facebook'}), since\n// that makes it useful in combination with handlebars {{#each}}.\n//\n// don't cache the output of this function: if called during startup (before\n// oauth packages load) it might not include them all.\n//\n// NOTE: It is very important to have this return password last\n// because of the way we render the different providers in\n// login_buttons_dropdown.html\nexport const getLoginServices = () => {\n  // First look for OAuth services.\n  const services = Package['accounts-oauth'] ? Accounts.oauth.serviceNames() : [];\n\n  // Be equally kind to all login services. This also preserves\n  // backwards-compatibility. (But maybe order should be\n  // configurable?)\n  services.sort();\n\n  // Add password, if it's there; it must come last.\n  if (hasPasswordService())\n    services.push('password');\n\n  if (hasPasswordlessService())\n    services.push('passwordless');\n\n  return services.map(name => ({ name }));\n};\n\nexport const hasPasswordService = () => !!Package['accounts-password'];\n\nexport const hasPasswordlessService = () => !!Package['accounts-passwordless'];\n\nexport const dropdown = () =>\n  hasPasswordService() || hasPasswordlessService() || getLoginServices().length > 1;\n\n// XXX improve these. should this be in accounts-password instead?\n//\n// XXX these will become configurable, and will be validated on\n// the server as well.\nexport const validateUsername = username => {\n  if (username.length >= 3) {\n    return true;\n  } else {\n    loginButtonsSession.errorMessage(\"Username must be at least 3 characters long\");\n    return false;\n  }\n};\n\nexport const validateEmail = email => {\n  if (passwordSignupFields() === \"USERNAME_AND_OPTIONAL_EMAIL\" && email === '')\n    return true;\n\n  if (email.includes('@')) {\n    return true;\n  } else {\n    loginButtonsSession.errorMessage(\"Invalid email\");\n    return false;\n  }\n};\n\nexport const validatePassword = password => {\n  if (password.length >= 6) {\n    return true;\n  } else {\n    loginButtonsSession.errorMessage(\"Password must be at least 6 characters long\");\n    return false;\n  }\n};\n\n//\n// loginButtonLoggedOut template\n//\n\nTemplate._loginButtonsLoggedOut.helpers({\n  dropdown,\n  services: getLoginServices,\n  singleService: () => {\n    const services = getLoginServices();\n    if (services.length !== 1)\n      throw new Error(\n        \"Shouldn't be rendering this template with more than one configured service\");\n    return services[0];\n  },\n  configurationLoaded: () => Accounts.loginServicesConfigured(),\n});\n\n\n//\n// loginButtonsLoggedIn template\n//\n\n  // decide whether we should show a dropdown rather than a row of\n  // buttons\nTemplate._loginButtonsLoggedIn.helpers({ dropdown });\n\n\n\n//\n// loginButtonsLoggedInSingleLogoutButton template\n//\n\nTemplate._loginButtonsLoggedInSingleLogoutButton.helpers({ displayName });\n\n\n\n//\n// loginButtonsMessage template\n//\n\nTemplate._loginButtonsMessages.helpers({\n  errorMessage: () => loginButtonsSession.get('errorMessage'),\n});\n\nTemplate._loginButtonsMessages.helpers({\n  infoMessage: () => loginButtonsSession.get('infoMessage'),\n});\n\n\n//\n// loginButtonsLoggingInPadding template\n//\n\nTemplate._loginButtonsLoggingInPadding.helpers({ dropdown });\n"],"mappings":"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"},"sourceType":"module","externalDependencies":{},"hash":"7ceef7a5f3335d91c10fd88b5f826c5f67d9f555"}
