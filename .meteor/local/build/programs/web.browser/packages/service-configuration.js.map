{"version":3,"sources":["meteor://ðŸ’»app/packages/service-configuration/service_configuration_common.js"],"names":["ServiceConfiguration","configurations","Mongo","Collection","_preventAutopublish","connection","Meteor","isClient","Accounts","ConfigError","serviceName","loginServicesConfigured","message","prototype","Error","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAI,OAAOA,oBAAoB,KAAK,WAAW,EAAE;EAC/CA,oBAAoB,GAAG,CAAC,CAAC;AAC3B;;AAEA;AACA;AACAA,oBAAoB,CAACC,cAAc,GAAG,IAAIC,KAAK,CAACC,UAAU,CACxD,2CAA2C,EAC3C;EACEC,mBAAmB,EAAE,IAAI;EACzBC,UAAU,EAAEC,MAAM,CAACC,QAAQ,GAAGC,QAAQ,CAACH,UAAU,GAAGC,MAAM,CAACD;AAC7D,CACF,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACAL,oBAAoB,CAACS,WAAW,GAAG,UAASC,WAAW,EAAE;EACvD,IAAIJ,MAAM,CAACC,QAAQ,IAAI,CAACC,QAAQ,CAACG,uBAAuB,CAAC,CAAC,EAAE;IAC1D,IAAI,CAACC,OAAO,GAAG,4CAA4C;EAC7D,CAAC,MAAM,IAAIF,WAAW,EAAE;IACtB,IAAI,CAACE,OAAO,GAAG,UAAU,GAAGF,WAAW,GAAG,iBAAiB;EAC7D,CAAC,MAAM;IACL,IAAI,CAACE,OAAO,GAAG,wBAAwB;EACzC;AACF,CAAC;AACDZ,oBAAoB,CAACS,WAAW,CAACI,SAAS,GAAG,IAAIC,KAAK,CAAC,CAAC;AACxDd,oBAAoB,CAACS,WAAW,CAACI,SAAS,CAACE,IAAI,GAC7C,kCAAkC,C","file":"/packages/service-configuration.js","sourcesContent":["if (typeof ServiceConfiguration === 'undefined') {\n  ServiceConfiguration = {};\n}\n\n// Table containing documents with configuration options for each\n// login service\nServiceConfiguration.configurations = new Mongo.Collection(\n  'meteor_accounts_loginServiceConfiguration',\n  {\n    _preventAutopublish: true,\n    connection: Meteor.isClient ? Accounts.connection : Meteor.connection,\n  }\n);\n// Leave this collection open in insecure mode. In theory, someone could\n// hijack your oauth connect requests to a different endpoint or appId,\n// but you did ask for 'insecure'. The advantage is that it is much\n// easier to write a configuration wizard that works only in insecure\n// mode.\n\n// Thrown when trying to use a login service which is not configured\nServiceConfiguration.ConfigError = function(serviceName) {\n  if (Meteor.isClient && !Accounts.loginServicesConfigured()) {\n    this.message = 'Login service configuration not yet loaded';\n  } else if (serviceName) {\n    this.message = 'Service ' + serviceName + ' not configured';\n  } else {\n    this.message = 'Service not configured';\n  }\n};\nServiceConfiguration.ConfigError.prototype = new Error();\nServiceConfiguration.ConfigError.prototype.name =\n  'ServiceConfiguration.ConfigError';\n"]}